{"remainingRequest":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\thread-loader\\dist\\cjs.js!F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\babel-loader\\lib\\index.js!F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\src\\utils\\print\\packages\\printarea.js","dependencies":[{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\src\\utils\\print\\packages\\printarea.js","mtime":1630509410923},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630511852775},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1630511853252},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\babel-loader\\lib\\index.js","mtime":1630511852747}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5jb25zdHJ1Y3RvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJGOlxcY3JvZFx1OTg3OVx1NzZFRVxcXHU0RUJBXHU0RThCXHU3QkExXHU3NDA2XHU3Q0ZCXHU3RURGMlxcaUJpekVIUlxcYXBwX0VIUlBpbVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIkY6XFxjcm9kXHU5ODc5XHU3NkVFXFxcdTRFQkFcdTRFOEJcdTdCQTFcdTc0MDZcdTdDRkJcdTdFREYyXFxpQml6RUhSXFxhcHBfRUhSUGltXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7Cgp2YXIgX2RlZmF1bHQgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBfZGVmYXVsdChvcHRpb24pIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBfZGVmYXVsdCk7CgogICAgdGhpcy5zdGFuZGFyZHMgPSB7CiAgICAgIHN0cmljdDogJ3N0cmljdCcsCiAgICAgIGxvb3NlOiAnbG9vc2UnLAogICAgICBodG1sNTogJ2h0bWw1JwogICAgfTsKICAgIHRoaXMuc2VsZWN0QXJyYXkgPSBbXTsgLy8g5a2Y5YKoc2VsZWN055qECgogICAgdGhpcy5jb3VudGVyID0gMDsKICAgIHRoaXMuc2V0dGluZ3MgPSB7CiAgICAgIHN0YW5kYXJkOiB0aGlzLnN0YW5kYXJkcy5odG1sNSwKICAgICAgZXh0cmFIZWFkOiAnJywKICAgICAgLy8g6ZmE5Yqg5ZyoaGVhZOagh+etvuS4iueahOmineWkluWFg+e0oCzkvb/nlKjpgJflj7fliIbpmpQKICAgICAgZXh0cmFDc3M6ICcnLAogICAgICAvLyDpop3lpJbnmoRjc3PpgJflj7fliIbpmpQKICAgICAgcG9wVGl0bGU6ICcnLAogICAgICAvLyDmoIfpopgKICAgICAgZW5kQ2FsbGJhY2s6IG51bGwsCiAgICAgIC8vIOaIkOWKn+aJk+W8gOWQjueahOWbnuiwg+WHveaVsAogICAgICBpZHM6ICcnIC8vIOWxgOmDqOaJk+WNsOeahGlkCgogICAgfTsKICAgIE9iamVjdC5hc3NpZ24odGhpcy5zZXR0aW5ncywgb3B0aW9uKTsKICAgIHRoaXMuaW5pdCgpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKF9kZWZhdWx0LCBbewogICAga2V5OiAiaW5pdCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgdGhpcy5jb3VudGVyKys7CiAgICAgIHRoaXMuc2V0dGluZ3MuaWQgPSAicHJpbnRBcmVhXyIuY29uY2F0KHRoaXMuY291bnRlcik7CiAgICAgIHZhciBQcmludEFyZWFXaW5kb3cgPSB0aGlzLmdldFByaW50V2luZG93KCk7IC8vIOWIm+W7umlmcmFtZQoKICAgICAgdGhpcy53cml0ZShQcmludEFyZWFXaW5kb3cuZG9jKTsgLy8g5YaZ5YWl5YaF5a65CgogICAgICB0aGlzLnByaW50KFByaW50QXJlYVdpbmRvdyk7CiAgICAgIHRoaXMuc2V0dGluZ3MuZW5kQ2FsbGJhY2soKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJwcmludCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcHJpbnQoUEFXaW5kb3cpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBwYVdpbmRvdyA9IFBBV2luZG93LndpbjsKCiAgICAgIHZhciBfbG9hZGVkID0gZnVuY3Rpb24gX2xvYWRlZCgpIHsKICAgICAgICBwYVdpbmRvdy5mb2N1cygpOwogICAgICAgIHBhV2luZG93LnByaW50KCk7CgogICAgICAgIHRyeSB7CiAgICAgICAgICB2YXIgYm94ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoX3RoaXMuc2V0dGluZ3MuaWQpOwoKICAgICAgICAgIHZhciBjYW52YXNMaXN0ID0gX3RoaXMuZWxzZG9tLnF1ZXJ5U2VsZWN0b3JBbGwoJy5jYW52YXNJbWcnKTsgLy8gY29uc29sZS5sb2codGhpcy5lbHNkb20pCgoKICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2FudmFzTGlzdC5sZW5ndGg7IGkrKykgewogICAgICAgICAgICB2YXIgX3BhcmVudCA9IGNhbnZhc0xpc3RbaV0ucGFyZW50Tm9kZTsKCiAgICAgICAgICAgIF9wYXJlbnQucmVtb3ZlQ2hpbGQoY2FudmFzTGlzdFtpXSk7CiAgICAgICAgICB9CgogICAgICAgICAgYm94LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYm94KTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICB9CiAgICAgIH07CgogICAgICBpZiAod2luZG93LkFjdGl2ZVhPYmplY3QpIHsKICAgICAgICBwYVdpbmRvdy5vbmxvYWQgPSBfbG9hZGVkKCk7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CgogICAgICBwYVdpbmRvdy5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgX2xvYWRlZCgpOwogICAgICB9OwogICAgfQogIH0sIHsKICAgIGtleTogIndyaXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB3cml0ZShQQURvY3VtZW50LCAkZWxlKSB7CiAgICAgIFBBRG9jdW1lbnQub3BlbigpOwogICAgICBQQURvY3VtZW50LndyaXRlKCIiLmNvbmNhdCh0aGlzLmRvY1R5cGUoKSwgIjxodG1sPiIpLmNvbmNhdCh0aGlzLmdldEhlYWQoKSkuY29uY2F0KHRoaXMuZ2V0Qm9keSgpLCAiPC9odG1sPiIpKTsKICAgICAgUEFEb2N1bWVudC5jbG9zZSgpOwogICAgfQogIH0sIHsKICAgIGtleTogImRvY1R5cGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRvY1R5cGUoKSB7CiAgICAgIGlmICh0aGlzLnNldHRpbmdzLnN0YW5kYXJkID09PSB0aGlzLnN0YW5kYXJkcy5odG1sNSkgewogICAgICAgIHJldHVybiAnPCFET0NUWVBFIGh0bWw+JzsKICAgICAgfQoKICAgICAgdmFyIHRyYW5zaXRpb25hbCA9IHRoaXMuc2V0dGluZ3Muc3RhbmRhcmQgPT09IHRoaXMuc3RhbmRhcmRzLmxvb3NlID8gJyBUcmFuc2l0aW9uYWwnIDogJyc7CiAgICAgIHZhciBkdGQgPSB0aGlzLnNldHRpbmdzLnN0YW5kYXJkID09PSB0aGlzLnN0YW5kYXJkcy5sb29zZSA/ICdsb29zZScgOiAnc3RyaWN0JzsKICAgICAgcmV0dXJuICI8IURPQ1RZUEUgSFRNTCBQVUJMSUMgXCItLy9XM0MvL0RURCBIVE1MIDQuMDEiLmNvbmNhdCh0cmFuc2l0aW9uYWwsICIvL0VOXCIgXCJodHRwOi8vd3d3LnczLm9yZy9UUi9odG1sNC8iKS5jb25jYXQoZHRkLCAiLmR0ZFwiPiIpOwogICAgfQogIH0sIHsKICAgIGtleTogImdldEhlYWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEhlYWQoKSB7CiAgICAgIHZhciBleHRyYUhlYWQgPSAnJzsKICAgICAgdmFyIGxpbmtzID0gJyc7CiAgICAgIHZhciBzdHlsZSA9ICcnOwoKICAgICAgaWYgKHRoaXMuc2V0dGluZ3MuZXh0cmFIZWFkKSB7CiAgICAgICAgdGhpcy5zZXR0aW5ncy5leHRyYUhlYWQucmVwbGFjZSgvKFteLF0rKS9nLCBmdW5jdGlvbiAobSkgewogICAgICAgICAgZXh0cmFIZWFkICs9IG07CiAgICAgICAgfSk7CiAgICAgIH0gLy8g5aSN5Yi25omA5pyJbGlua+agh+etvgoKCiAgICAgIFtdLmZvckVhY2guY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdsaW5rJyksIGZ1bmN0aW9uIChpdGVtLCBpKSB7CiAgICAgICAgaWYgKGl0ZW0uaHJlZi5pbmRleE9mKCcuY3NzJykgPj0gMCkgewogICAgICAgICAgbGlua3MgKz0gIjxsaW5rIHR5cGU9XCJ0ZXh0L2Nzc1wiIHJlbD1cInN0eWxlc2hlZXRcIiBocmVmPVwiIi5jb25jYXQoaXRlbS5ocmVmLCAiXCIgPiIpOwogICAgICAgIH0KICAgICAgfSk7IC8vIGNvbnN0IF9saW5rcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2xpbmsnKTsKICAgICAgLy8gaWYgKHR5cGVvZiBfbGlua3MgPT09ICdvYmplY3QnIHx8IF9saW5rcy5sZW5ndGggPiAwKSB7CiAgICAgIC8vICAgLy8g5aSN5Yi25omA5pyJbGlua+agh+etvgogICAgICAvLyAgIGZvciAobGV0IGkgPSAwOyBpIDwgX2xpbmtzLmxlbmd0aDsgaSsrKSB7CiAgICAgIC8vICAgICBsZXQgaXRlbSA9IF9saW5rc1tpXTsKICAgICAgLy8gICAgIGlmIChpdGVtLmhyZWYuaW5kZXhPZignLmNzcycpID49IDApIHsKICAgICAgLy8gICAgICAgbGlua3MgKz0gYDxsaW5rIHR5cGU9InRleHQvY3NzIiByZWw9InN0eWxlc2hlZXQiIGhyZWY9IiR7aXRlbS5ocmVmfSIgPmA7CiAgICAgIC8vICAgICB9CiAgICAgIC8vICAgfQogICAgICAvLyB9CiAgICAgIC8vIOW+queOr+iOt+WPlnN0eWxl5qCH562+55qE5qC35byPCgogICAgICB2YXIgZG9tU3R5bGUgPSBkb2N1bWVudC5zdHlsZVNoZWV0czsKCiAgICAgIGlmIChkb21TdHlsZSAmJiBkb21TdHlsZS5sZW5ndGggPiAwKSB7CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkb21TdHlsZS5sZW5ndGg7IGkrKykgewogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgaWYgKGRvbVN0eWxlW2ldLmNzc1J1bGVzIHx8IGRvbVN0eWxlW2ldLnJ1bGVzKSB7CiAgICAgICAgICAgICAgdmFyIHJ1bGVzID0gZG9tU3R5bGVbaV0uY3NzUnVsZXMgfHwgZG9tU3R5bGVbaV0ucnVsZXM7CgogICAgICAgICAgICAgIGZvciAodmFyIGIgPSAwOyBiIDwgcnVsZXMubGVuZ3RoOyBiKyspIHsKICAgICAgICAgICAgICAgIHN0eWxlICs9IHJ1bGVzW2JdLmNzc1RleHQ7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGRvbVN0eWxlW2ldLmhyZWYgKyBlKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLnNldHRpbmdzLmV4dHJhQ3NzKSB7CiAgICAgICAgdGhpcy5zZXR0aW5ncy5leHRyYUNzcy5yZXBsYWNlKC8oW14sXHNdKykvZywgZnVuY3Rpb24gKG0pIHsKICAgICAgICAgIGxpbmtzICs9ICI8bGluayB0eXBlPVwidGV4dC9jc3NcIiByZWw9XCJzdHlsZXNoZWV0XCIgaHJlZj1cIiIuY29uY2F0KG0sICJcIj4iKTsKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgcmV0dXJuICI8aGVhZD48dGl0bGU+Ii5jb25jYXQodGhpcy5zZXR0aW5ncy5wb3BUaXRsZSwgIjwvdGl0bGU+IikuY29uY2F0KGV4dHJhSGVhZCkuY29uY2F0KGxpbmtzLCAiPHN0eWxlIHR5cGU9XCJ0ZXh0L2Nzc1wiPiIpLmNvbmNhdChzdHlsZSwgIjwvc3R5bGU+PHN0eWxlPmh0bWwsYm9keSxkaXZ7aGVpZ2h0OiBhdXRvIWltcG9ydGFudDt9PC9zdHlsZT48L2hlYWQ+Iik7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0Qm9keSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Qm9keSgpIHsKICAgICAgdmFyIGlkcyA9IHRoaXMuc2V0dGluZ3MuaWRzOwogICAgICBpZHMgPSBpZHMucmVwbGFjZShuZXcgUmVnRXhwKCIjIiwgImciKSwgJycpOwogICAgICB0aGlzLmVsc2RvbSA9IHRoaXMuYmVmb3JlSGFubGVyKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkcykpOwogICAgICB2YXIgZWxlID0gdGhpcy5nZXRGb3JtRGF0YSh0aGlzLmVsc2RvbSk7CiAgICAgIHZhciBodG0gPSBlbGUub3V0ZXJIVE1MOwogICAgICByZXR1cm4gJzxib2R5PicgKyBodG0gKyAnPC9ib2R5Pic7CiAgICB9IC8vIOWFi+mahuiKgueCueS5i+WJjeWBmueahOaTjeS9nAoKICB9LCB7CiAgICBrZXk6ICJiZWZvcmVIYW5sZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGJlZm9yZUhhbmxlcihlbHNkb20pIHsKICAgICAgdmFyIGNhbnZhc0xpc3QgPSBlbHNkb20ucXVlcnlTZWxlY3RvckFsbCgnY2FudmFzJyk7IC8vIGNhbnZhc+i9rOaNonBuZ+WbvueJhwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjYW52YXNMaXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKCFjYW52YXNMaXN0W2ldLnN0eWxlLmRpc3BsYXkpIHsKICAgICAgICAgIHZhciBfcGFyZW50ID0gY2FudmFzTGlzdFtpXS5wYXJlbnROb2RlOwoKICAgICAgICAgIHZhciBfY2FudmFzVXJsID0gY2FudmFzTGlzdFtpXS50b0RhdGFVUkwoJ2ltYWdlL3BuZycpOwoKICAgICAgICAgIHZhciBfaW1nID0gbmV3IEltYWdlKCk7CgogICAgICAgICAgX2ltZy5jbGFzc05hbWUgPSAnY2FudmFzSW1nJzsKICAgICAgICAgIF9pbWcuc3R5bGUuZGlzcGxheSA9ICdub25lJzsKICAgICAgICAgIF9pbWcuc3JjID0gX2NhbnZhc1VybDsgLy8gX3BhcmVudC5yZXBsYWNlQ2hpbGQoX2ltZywgY2FudmFzTGlzdFtpXSkKCiAgICAgICAgICBfcGFyZW50LmFwcGVuZENoaWxkKF9pbWcpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIGVsc2RvbTsKICAgIH0gLy8g5qC55o2udHlwZeWOu+WkhOeQhmZvcm3ooajljZUKCiAgfSwgewogICAga2V5OiAiZ2V0Rm9ybURhdGEiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEZvcm1EYXRhKGVsZSkgewogICAgICB2YXIgY29weSA9IGVsZS5jbG9uZU5vZGUodHJ1ZSk7CiAgICAgIHZhciBjb3BpZWRJbnB1dHMgPSBjb3B5LnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0LHNlbGVjdCx0ZXh0YXJlYScpOwogICAgICB2YXIgY2FudmFzSW1nTGlzdCA9IGNvcHkucXVlcnlTZWxlY3RvckFsbCgnLmNhbnZhc0ltZyxjYW52YXMnKTsKICAgICAgdmFyIHNlbGVjdENvdW50ID0gLTE7IC8vIOWkhOeQhuaJgOaciWNhbnZhcwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjYW52YXNJbWdMaXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdmFyIF9wYXJlbnQgPSBjYW52YXNJbWdMaXN0W2ldLnBhcmVudE5vZGU7CiAgICAgICAgdmFyIGl0ZW0gPSBjYW52YXNJbWdMaXN0W2ldOyAvLyDliKDpmaTlhYvpmoblkI7nmoRjYW52YXPoioLngrkKCiAgICAgICAgaWYgKGl0ZW0udGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnY2FudmFzJykgewogICAgICAgICAgX3BhcmVudC5yZW1vdmVDaGlsZChpdGVtKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgaXRlbS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsKICAgICAgICB9CiAgICAgIH0gLy8g5aSE55CG5omA5pyJ6L6T5YWl5qGGCgoKICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGNvcGllZElucHV0cy5sZW5ndGg7IF9pKyspIHsKICAgICAgICB2YXIgX2l0ZW0gPSBjb3BpZWRJbnB1dHNbX2ldOwoKICAgICAgICB2YXIgdHlwZUlucHV0ID0gX2l0ZW0uZ2V0QXR0cmlidXRlKCd0eXBlJyk7CgogICAgICAgIHZhciBjb3BpZWRJbnB1dCA9IGNvcGllZElucHV0c1tfaV07IC8vIOiOt+WPlnNlbGVjdOagh+etvgoKICAgICAgICBpZiAoIXR5cGVJbnB1dCkgewogICAgICAgICAgdHlwZUlucHV0ID0gX2l0ZW0udGFnTmFtZSA9PT0gJ1NFTEVDVCcgPyAnc2VsZWN0JyA6IF9pdGVtLnRhZ05hbWUgPT09ICdURVhUQVJFQScgPyAndGV4dGFyZWEnIDogJyc7CiAgICAgICAgfSAvLyDlpITnkIZpbnB1dOahhgoKCiAgICAgICAgaWYgKF9pdGVtLnRhZ05hbWUgPT09ICdJTlBVVCcpIHsKICAgICAgICAgIC8vIOmZpOS6huWNlemAieahhiDlpJrpgInmoYbmr5TovoPnibnliKsKICAgICAgICAgIGlmICh0eXBlSW5wdXQgPT09ICdyYWRpbycgfHwgdHlwZUlucHV0ID09PSAnY2hlY2tib3gnKSB7CiAgICAgICAgICAgIGNvcGllZElucHV0LnNldEF0dHJpYnV0ZSgnY2hlY2tlZCcsIF9pdGVtLmNoZWNrZWQpOyAvLyAKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGNvcGllZElucHV0LnZhbHVlID0gX2l0ZW0udmFsdWU7CiAgICAgICAgICAgIGNvcGllZElucHV0LnNldEF0dHJpYnV0ZSgndmFsdWUnLCBfaXRlbS52YWx1ZSk7CiAgICAgICAgICB9IC8vIOWkhOeQhnNlbGVjdAoKICAgICAgICB9IGVsc2UgaWYgKHR5cGVJbnB1dCA9PT0gJ3NlbGVjdCcpIHsKICAgICAgICAgIHNlbGVjdENvdW50Kys7CgogICAgICAgICAgZm9yICh2YXIgYiA9IDA7IGIgPCBlbGUucXVlcnlTZWxlY3RvckFsbCgnc2VsZWN0JykubGVuZ3RoOyBiKyspIHsKICAgICAgICAgICAgdmFyIHNlbGVjdCA9IGVsZS5xdWVyeVNlbGVjdG9yQWxsKCdzZWxlY3QnKVtiXTsgLy8g6I635Y+W5Y6f5aeL5bGC5q+P5LiA5Liqc2VsZWN0CgogICAgICAgICAgICAhc2VsZWN0LmdldEF0dHJpYnV0ZSgnbmV3YnMnKSAmJiBzZWxlY3Quc2V0QXR0cmlidXRlKCduZXdicycsIGIpOyAvLyDmt7vliqDmoIfor4YKCiAgICAgICAgICAgIGlmIChzZWxlY3QuZ2V0QXR0cmlidXRlKCduZXdicycpID09IHNlbGVjdENvdW50KSB7CiAgICAgICAgICAgICAgdmFyIG9wU2VsZWN0ZWRJbmRleCA9IGVsZS5xdWVyeVNlbGVjdG9yQWxsKCdzZWxlY3QnKVtzZWxlY3RDb3VudF0uc2VsZWN0ZWRJbmRleDsKCiAgICAgICAgICAgICAgX2l0ZW0ub3B0aW9uc1tvcFNlbGVjdGVkSW5kZXhdLnNldEF0dHJpYnV0ZSgnc2VsZWN0ZWQnLCB0cnVlKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSAvLyDlpITnkIZ0ZXh0YXJlYQoKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY29waWVkSW5wdXQuaW5uZXJIVE1MID0gX2l0ZW0udmFsdWU7CiAgICAgICAgICBjb3BpZWRJbnB1dC5zZXRBdHRyaWJ1dGUoJ2h0bWwnLCBfaXRlbS52YWx1ZSk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gY29weTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRQcmludFdpbmRvdyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0UHJpbnRXaW5kb3coKSB7CiAgICAgIHZhciBmID0gdGhpcy5JZnJhbWUoKTsKICAgICAgcmV0dXJuIHsKICAgICAgICBmOiBmLAogICAgICAgIHdpbjogZi5jb250ZW50V2luZG93IHx8IGYsCiAgICAgICAgZG9jOiBmLmRvYwogICAgICB9OwogICAgfQogIH0sIHsKICAgIGtleTogIklmcmFtZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gSWZyYW1lKCkgewogICAgICB2YXIgZnJhbWVJZCA9IHRoaXMuc2V0dGluZ3MuaWQ7CiAgICAgIHZhciBpZnJhbWU7CiAgICAgIHZhciB0aGF0ID0gdGhpczsKCiAgICAgIHRyeSB7CiAgICAgICAgaWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7CiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpZnJhbWUpOwogICAgICAgIGlmcmFtZS5zdHlsZS5ib3JkZXIgPSAnMHB4JzsKICAgICAgICBpZnJhbWUuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnOwogICAgICAgIGlmcmFtZS5zdHlsZS53aWR0aCA9ICcwcHgnOwogICAgICAgIGlmcmFtZS5zdHlsZS5oZWlnaHQgPSAnMHB4JzsKICAgICAgICBpZnJhbWUuc3R5bGUucmlnaHQgPSAnMHB4JzsKICAgICAgICBpZnJhbWUuc3R5bGUudG9wID0gJzBweCc7CiAgICAgICAgaWZyYW1lLnNldEF0dHJpYnV0ZSgnaWQnLCBmcmFtZUlkKTsgLy8gaWZyYW1lLnNldEF0dHJpYnV0ZSgnc3JjJywgbmV3IERhdGUoKS5nZXRUaW1lKCkpOwoKICAgICAgICBpZnJhbWUuZG9jID0gbnVsbDsKICAgICAgICBpZnJhbWUuZG9jID0gaWZyYW1lLmNvbnRlbnREb2N1bWVudCA/IGlmcmFtZS5jb250ZW50RG9jdW1lbnQgOiBpZnJhbWUuY29udGVudFdpbmRvdyA/IGlmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50IDogaWZyYW1lLmRvY3VtZW50OwoKICAgICAgICBpZnJhbWUub25sb2FkID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgdmFyIHdpbiA9IGlmcmFtZS5jb250ZW50V2luZG93IHx8IGlmcmFtZTsKICAgICAgICAgIHRoYXQucHJpbnQod2luKTsKICAgICAgICB9OwogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGUgKyAnLiBpZnJhbWVzIG1heSBub3QgYmUgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3Nlci4nKTsKICAgICAgfQoKICAgICAgaWYgKGlmcmFtZS5kb2MgPT0gbnVsbCkgewogICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGZpbmQgZG9jdW1lbnQuJyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBpZnJhbWU7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gX2RlZmF1bHQ7Cn0oKTsKCmV4cG9ydCB7IF9kZWZhdWx0IGFzIGRlZmF1bHQgfTs="},null]}