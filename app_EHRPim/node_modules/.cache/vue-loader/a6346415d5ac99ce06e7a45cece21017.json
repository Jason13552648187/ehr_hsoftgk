{"remainingRequest":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\src\\pages\\trm\\trmlgbcostgrid-view\\trmlgbcostgrid-view-base.vue?vue&type=script&lang=tsx&","dependencies":[{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\src\\pages\\trm\\trmlgbcostgrid-view\\trmlgbcostgrid-view-base.vue","mtime":1630509410380},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630511852775},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1630511853252},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\babel-loader\\lib\\index.js","mtime":1630511852747},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\ts-loader\\index.js","mtime":1630511985412},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630511852775},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\vue-loader\\lib\\index.js","mtime":1630512070338}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQppbXBvcnQgeyBWdWUsIENvbXBvbmVudCwgUHJvcCwgUHJvdmlkZSwgRW1pdCwgV2F0Y2ggfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJzsNCmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJzsNCmltcG9ydCB7IFVJQWN0aW9uVG9vbCwgVXRpbCB9IGZyb20gJ0AvdXRpbHMnOw0KaW1wb3J0IHsgVnVlTGlmZUN5Y2xlUHJvY2Vzc2luZywgR3JpZFZpZXdCYXNlIH0gZnJvbSAnQC9jcm0tY29yZSc7DQppbXBvcnQgVHJtTGdiQ29zdFNlcnZpY2UgZnJvbSAnQC9zZXJ2aWNlL3RybS1sZ2ItY29zdC90cm0tbGdiLWNvc3Qtc2VydmljZSc7DQoNCmltcG9ydCBHcmlkVmlld0VuZ2luZSBmcm9tICdAZW5naW5lL3ZpZXcvZ3JpZC12aWV3LWVuZ2luZSc7DQoNCmltcG9ydCBDb2RlTGlzdFNlcnZpY2UgZnJvbSAiQHNlcnZpY2UvYXBwL2NvZGVsaXN0LXNlcnZpY2UiOw0KDQoNCi8qKg0KICog6ICB5bmy6YOo5rS75Yqo566h55CG5Z+657G7DQogKg0KICogQGV4cG9ydA0KICogQGNsYXNzIFRSTUxHQkNPU1RHcmlkVmlld0Jhc2UNCiAqIEBleHRlbmRzIHtHcmlkVmlld0Jhc2V9DQogKi8NCkBDb21wb25lbnQoe30pDQpAVnVlTGlmZUN5Y2xlUHJvY2Vzc2luZw0KZXhwb3J0IGRlZmF1bHQgY2xhc3MgVFJNTEdCQ09TVEdyaWRWaWV3QmFzZSBleHRlbmRzIEdyaWRWaWV3QmFzZSB7DQoNCiAgICAvKioNCiAgICAgKiDlrp7kvZPmnI3liqHlr7nosaENCiAgICAgKg0KICAgICAqIEB0eXBlIHtUcm1MZ2JDb3N0U2VydmljZX0NCiAgICAgKiBAbWVtYmVyb2YgVFJNTEdCQ09TVEdyaWRWaWV3QmFzZQ0KICAgICAqLw0KICAgIHB1YmxpYyBhcHBFbnRpdHlTZXJ2aWNlOiBUcm1MZ2JDb3N0U2VydmljZSA9IG5ldyBUcm1MZ2JDb3N0U2VydmljZTsNCg0KDQogICAgLyoqDQogICAgICog6K6h5pWw5Zmo5pyN5Yqh5a+56LGh6ZuG5ZCIDQogICAgICoNCiAgICAgKiBAdHlwZSB7QXJyYXk8Kj59DQogICAgICogQG1lbWJlcm9mIFRSTUxHQkNPU1RHcmlkVmlld0Jhc2UNCiAgICAgKi8gICAgDQogICAgcHVibGljIGNvdW50ZXJTZXJ2aWNlQXJyYXk6QXJyYXk8YW55PiA9IFtdOw0KICAgIA0KICAgIC8qKg0KICAgICAqIOaVsOaNruWPmOWMlg0KICAgICAqDQogICAgICogQHBhcmFtIHsqfSB2YWwNCiAgICAgKiBAcmV0dXJucyB7Kn0NCiAgICAgKiBAbWVtYmVyb2YgVFJNTEdCQ09TVEdyaWRWaWV3QmFzZQ0KICAgICAqLw0KICAgIEBFbWl0KCkgDQogICAgcHVibGljIHZpZXdEYXRhc0NoYW5nZSh2YWw6IGFueSk6YW55IHsNCiAgICAgICAgcmV0dXJuIHZhbDsNCiAgICB9DQoNCgkvKioNCgkgKiDop4blm77moIfor4YNCgkgKg0KCSAqIEB0eXBlIHtzdHJpbmd9DQoJICogQG1lbWJlcm9mIFRSTUxHQkNPU1RHcmlkVmlld0Jhc2UNCgkgKi8NCglwdWJsaWMgdmlld3RhZzogc3RyaW5nID0gJ2RkZGMzZjBiZTYyMDI2ZTRkMmVkZTY3ZTYyNzQ2ZjRlJzsNCg0KICAgIC8qKg0KICAgICAqIOeItuaVsOaNruWvueixoQ0KICAgICAqDQogICAgICogQHByb3RlY3RlZA0KICAgICAqIEB0eXBlIHsqfQ0KICAgICAqIEBtZW1iZXJvZiBUUk1MR0JDT1NUR3JpZFZpZXdCYXNlDQogICAgICovDQogICAgcHJvdGVjdGVkIHNyZnBhcmVudGRhdGE6IGFueSA9IHt9Ow0KDQoJLyoqDQoJICog6Ieq5a6a5LmJ6KeG5Zu+5a+86Iiq5LiK5LiL5paH6ZuG5ZCIDQoJICoNCgkgKiBAdHlwZSB7Kn0NCgkgKiBAbWVtYmVyb2YgVFJNTEdCQ09TVEdyaWRWaWV3QmFzZQ0KCSAqLw0KICAgIHB1YmxpYyBjdXN0b21WaWV3TmF2Q29udGV4dHM6YW55ID17DQogICAgfTsNCg0KCS8qKg0KCSAqIOiHquWumuS5ieinhuWbvuWvvOiIquWPguaVsOmbhuWQiA0KCSAqDQoJICogQHR5cGUgeyp9DQoJICogQG1lbWJlcm9mIFRSTUxHQkNPU1RHcmlkVmlld0Jhc2UNCgkgKi8NCiAgICBwdWJsaWMgY3VzdG9tVmlld1BhcmFtczphbnkgPXsNCiAgICB9Ow0KDQogICAgLyoqDQogICAgICog6KeG5Zu+5qih5Z6L5pWw5o2uDQogICAgICoNCiAgICAgKiBAdHlwZSB7Kn0NCiAgICAgKiBAbWVtYmVyb2YgVFJNTEdCQ09TVEdyaWRWaWV3QmFzZQ0KICAgICAqLw0KICAgIHB1YmxpYyBtb2RlbDogYW55ID0gew0KICAgICAgICBzcmZDYXB0aW9uOiAnZW50aXRpZXMudHJtbGdiY29zdC52aWV3cy5ncmlkdmlldy5jYXB0aW9uJywNCiAgICAgICAgc3JmVGl0bGU6ICdlbnRpdGllcy50cm1sZ2Jjb3N0LnZpZXdzLmdyaWR2aWV3LnRpdGxlJywNCiAgICAgICAgc3JmU3ViVGl0bGU6ICdlbnRpdGllcy50cm1sZ2Jjb3N0LnZpZXdzLmdyaWR2aWV3LnN1YnRpdGxlJywNCiAgICAgICAgZGF0YUluZm86ICcnDQogICAgfQ0KDQogICAgLyoqDQogICAgICog5a655Zmo5qih5Z6LDQogICAgICoNCiAgICAgKiBAdHlwZSB7Kn0NCiAgICAgKiBAbWVtYmVyb2YgVFJNTEdCQ09TVEdyaWRWaWV3QmFzZQ0KICAgICAqLw0KICAgIHB1YmxpYyBjb250YWluZXJNb2RlbDogYW55ID0gew0KICAgICAgICB2aWV3X3Rvb2xiYXI6IHsgbmFtZTogJ3Rvb2xiYXInLCB0eXBlOiAnVE9PTEJBUicgfSwNCiAgICAgICAgdmlld19ncmlkOiB7IG5hbWU6ICdncmlkJywgdHlwZTogJ0dSSUQnIH0sDQogICAgICAgIHZpZXdfc2VhcmNoZm9ybTogeyBuYW1lOiAnc2VhcmNoZm9ybScsIHR5cGU6ICdTRUFSQ0hGT1JNJyB9LA0KICAgIH07DQoNCiAgICAvKioNCiAgICAgKiDop4blm77nirbmgIHorqLpmIXlr7nosaENCiAgICAgKg0KICAgICAqIEBwdWJsaWMNCiAgICAgKiBAdHlwZSB7U3ViamVjdDx7YWN0aW9uOiBzdHJpbmcsIGRhdGE6IGFueX0+fQ0KICAgICAqIEBtZW1iZXJvZiBUUk1MR0JDT1NUR3JpZFZpZXdCYXNlDQogICAgICovDQogICAgcHVibGljIHZpZXdTdGF0ZTogU3ViamVjdDxWaWV3U3RhdGU+ID0gbmV3IFN1YmplY3QoKTsNCiAgICAvKioNCiAgICAgKiDlt6XlhbfmoI/mqKHlnosNCiAgICAgKg0KICAgICAqIEB0eXBlIHsqfQ0KICAgICAqIEBtZW1iZXJvZiBUUk1MR0JDT1NUR3JpZFZpZXcNCiAgICAgKi8NCiAgICBwdWJsaWMgdG9vbEJhck1vZGVsczogYW55ID0gew0KICAgICAgICB0Yml0ZW0zOiB7IG5hbWU6ICd0Yml0ZW0zJywgY2FwdGlvbjogJ+aWsOW7uicsJ2lzU2hvd0NhcHRpb24nOnRydWUsJ2lzU2hvd0ljb24nOnRydWUsIHRvb2x0aXA6ICfmlrDlu7onLCBpY29uY2xzOiAnZmEgZmEtZmlsZS10ZXh0LW8nLCBpY29uOiAnJywgZGlzYWJsZWQ6IGZhbHNlLCB0eXBlOiAnREVVSUFDVElPTicsIHZpc2FibGVkOiB0cnVlLCBkYXRhYWNjYWN0aW9uOiAnJywgdWlhY3Rpb246IHsgdGFnOiAnTmV3JywgdGFyZ2V0OiAnJyB9LCBjbGFzczogJycgfSwNCg0KICAgICAgICB0Yml0ZW04OiB7IG5hbWU6ICd0Yml0ZW04JywgY2FwdGlvbjogJ+WIoOmZpCcsJ2lzU2hvd0NhcHRpb24nOnRydWUsJ2lzU2hvd0ljb24nOnRydWUsIHRvb2x0aXA6ICfliKDpmaQnLCBpY29uY2xzOiAnZmEgZmEtcmVtb3ZlJywgaWNvbjogJycsIGRpc2FibGVkOiBmYWxzZSwgdHlwZTogJ0RFVUlBQ1RJT04nLCB2aXNhYmxlZDogdHJ1ZSwgZGF0YWFjY2FjdGlvbjogJ1NSRlVSX19KR0xZR1hNTCcsIHVpYWN0aW9uOiB7IHRhZzogJ1JlbW92ZScsIHRhcmdldDogJ01VTFRJS0VZJyB9LCBjbGFzczogJycgfSwNCg0KICAgICAgICB0Yml0ZW0xOTogeyBuYW1lOiAndGJpdGVtMTknLCBjYXB0aW9uOiAn6L+H5rukJywnaXNTaG93Q2FwdGlvbic6dHJ1ZSwnaXNTaG93SWNvbic6dHJ1ZSwgdG9vbHRpcDogJ+i/h+a7pCcsIGljb25jbHM6ICdmYSBmYS1maWx0ZXInLCBpY29uOiAnJywgZGlzYWJsZWQ6IGZhbHNlLCB0eXBlOiAnREVVSUFDVElPTicsIHZpc2FibGVkOiB0cnVlLCBkYXRhYWNjYWN0aW9uOiAnU1JGVVJfX0pHTFlLUUxYJywgdWlhY3Rpb246IHsgdGFnOiAnVG9nZ2xlRmlsdGVyJywgdGFyZ2V0OiAnJyB9LCBjbGFzczogJycgfSwNCg0KICAgICAgICB0Yml0ZW0xMzogeyBuYW1lOiAndGJpdGVtMTMnLCBjYXB0aW9uOiAn5a+85Ye6JywnaXNTaG93Q2FwdGlvbic6dHJ1ZSwnaXNTaG93SWNvbic6dHJ1ZSwgdG9vbHRpcDogJ+WvvOWHuicsIGljb25jbHM6ICdmYSBmYS1maWxlLWV4Y2VsLW8nLCBpY29uOiAnJywgZGlzYWJsZWQ6IGZhbHNlLCB0eXBlOiAnREVVSUFDVElPTicsIHZpc2FibGVkOiB0cnVlLCBkYXRhYWNjYWN0aW9uOiAnJywgdWlhY3Rpb246IHsgdGFnOiAnRXhwb3J0RXhjZWwnLCB0YXJnZXQ6ICcnIH0sIE1heFJvd0NvdW50OiA1MDAwLCBjbGFzczogJycgfSwNCg0KICAgICAgICB0Yml0ZW0xODogeyBuYW1lOiAndGJpdGVtMTgnLCBjYXB0aW9uOiAn5biu5YqpJywnaXNTaG93Q2FwdGlvbic6dHJ1ZSwnaXNTaG93SWNvbic6dHJ1ZSwgdG9vbHRpcDogJ+W4ruWKqScsIGljb25jbHM6ICdmYSBmYS1xdWVzdGlvbicsIGljb246ICcnLCBkaXNhYmxlZDogZmFsc2UsIHR5cGU6ICdERVVJQUNUSU9OJywgdmlzYWJsZWQ6IHRydWUsIGRhdGFhY2NhY3Rpb246ICcnLCB1aWFjdGlvbjogeyB0YWc6ICdIZWxwJywgdGFyZ2V0OiAnJyB9LCBjbGFzczogJycgfSwNCg0KICAgIH07DQoNCg0KDQoNCg0KICAgIC8qKg0KICAgICAqIOinhuWbvuW8leaTjg0KICAgICAqDQogICAgICogQHB1YmxpYw0KICAgICAqIEB0eXBlIHtFbmdpbmV9DQogICAgICogQG1lbWJlcm9mIFRSTUxHQkNPU1RHcmlkVmlld0Jhc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgZW5naW5lOiBHcmlkVmlld0VuZ2luZSA9IG5ldyBHcmlkVmlld0VuZ2luZSgpOw0KCQ0KDQogICAgLyoqDQogICAgICog5byV5pOO5Yid5aeL5YyWDQogICAgICoNCiAgICAgKiBAcHVibGljDQogICAgICogQG1lbWJlcm9mIFRSTUxHQkNPU1RHcmlkVmlld0Jhc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgZW5naW5lSW5pdCgpOiB2b2lkIHsNCiAgICAgICAgdGhpcy5lbmdpbmUuaW5pdCh7DQogICAgICAgICAgICB2aWV3OiB0aGlzLA0KICAgICAgICAgICAgb3BlbmRhdGE6IChhcmdzOiBhbnlbXSwgcGFyYW1zPzogYW55LCAkZXZlbnQ/OiBhbnksIHhEYXRhPzogYW55KSA9PiB7DQogICAgICAgICAgICAgICAgdGhpcy5vcGVuZGF0YShhcmdzLCBwYXJhbXMsICRldmVudCwgeERhdGEpOw0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIG5ld2RhdGE6IChhcmdzOiBhbnlbXSwgcGFyYW1zPzogYW55LCAkZXZlbnQ/OiBhbnksIHhEYXRhPzogYW55KSA9PiB7DQogICAgICAgICAgICAgICAgdGhpcy5uZXdkYXRhKGFyZ3MsIHBhcmFtcywgJGV2ZW50LCB4RGF0YSk7DQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgZ3JpZDogdGhpcy4kcmVmcy5ncmlkLA0KICAgICAgICAgICAgc2VhcmNoZm9ybTogdGhpcy4kcmVmcy5zZWFyY2hmb3JtLA0KICAgICAgICAgICAga2V5UFNERUZpZWxkOiAndHJtbGdiY29zdCcsDQogICAgICAgICAgICBtYWpvclBTREVGaWVsZDogJ3RybWxnYmNvc3RuYW1lJywNCiAgICAgICAgICAgIGlzTG9hZERlZmF1bHQ6IHRydWUsDQogICAgICAgIH0pOw0KICAgIH0NCg0KDQogICAgLyoqDQogICAgICogdG9vbGJhciDpg6jku7YgY2xpY2sg5LqL5Lu2DQogICAgICoNCiAgICAgKiBAcGFyYW0geyp9IFthcmdzPXt9XQ0KICAgICAqIEBwYXJhbSB7Kn0gJGV2ZW50DQogICAgICogQG1lbWJlcm9mIFRSTUxHQkNPU1RHcmlkVmlld0Jhc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgdG9vbGJhcl9jbGljaygkZXZlbnQ6IGFueSwgJGV2ZW50Mj86IGFueSkgew0KICAgICAgICBpZiAoT2JqZWN0LmlzKCRldmVudC50YWcsICd0Yml0ZW0zJykpIHsNCiAgICAgICAgICAgIHRoaXMudG9vbGJhcl90Yml0ZW0zX2NsaWNrKG51bGwsICcnLCAkZXZlbnQyKTsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoT2JqZWN0LmlzKCRldmVudC50YWcsICd0Yml0ZW04JykpIHsNCiAgICAgICAgICAgIHRoaXMudG9vbGJhcl90Yml0ZW04X2NsaWNrKG51bGwsICcnLCAkZXZlbnQyKTsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoT2JqZWN0LmlzKCRldmVudC50YWcsICd0Yml0ZW0xOScpKSB7DQogICAgICAgICAgICB0aGlzLnRvb2xiYXJfdGJpdGVtMTlfY2xpY2sobnVsbCwgJycsICRldmVudDIpOw0KICAgICAgICB9DQogICAgICAgIGlmIChPYmplY3QuaXMoJGV2ZW50LnRhZywgJ3RiaXRlbTEzJykpIHsNCiAgICAgICAgICAgIHRoaXMudG9vbGJhcl90Yml0ZW0xM19jbGljayhudWxsLCAnJywgJGV2ZW50Mik7DQogICAgICAgIH0NCiAgICAgICAgaWYgKE9iamVjdC5pcygkZXZlbnQudGFnLCAnZGV1aWFjdGlvbjEnKSkgew0KICAgICAgICAgICAgdGhpcy50b29sYmFyX2RldWlhY3Rpb24xX2NsaWNrKG51bGwsICcnLCAkZXZlbnQyKTsNCiAgICAgICAgfQ0KICAgICAgICBpZiAoT2JqZWN0LmlzKCRldmVudC50YWcsICd0Yml0ZW0xOCcpKSB7DQogICAgICAgICAgICB0aGlzLnRvb2xiYXJfdGJpdGVtMThfY2xpY2sobnVsbCwgJycsICRldmVudDIpOw0KICAgICAgICB9DQogICAgfQ0KDQoNCiAgICAvKioNCiAgICAgKiBncmlkIOmDqOS7tiBzZWxlY3Rpb25jaGFuZ2Ug5LqL5Lu2DQogICAgICoNCiAgICAgKiBAcGFyYW0geyp9IFthcmdzPXt9XQ0KICAgICAqIEBwYXJhbSB7Kn0gJGV2ZW50DQogICAgICogQG1lbWJlcm9mIFRSTUxHQkNPU1RHcmlkVmlld0Jhc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgZ3JpZF9zZWxlY3Rpb25jaGFuZ2UoJGV2ZW50OiBhbnksICRldmVudDI/OiBhbnkpIHsNCiAgICAgICAgdGhpcy5lbmdpbmUub25DdHJsRXZlbnQoJ2dyaWQnLCAnc2VsZWN0aW9uY2hhbmdlJywgJGV2ZW50KTsNCiAgICB9DQoNCg0KICAgIC8qKg0KICAgICAqIGdyaWQg6YOo5Lu2IGJlZm9yZWxvYWQg5LqL5Lu2DQogICAgICoNCiAgICAgKiBAcGFyYW0geyp9IFthcmdzPXt9XQ0KICAgICAqIEBwYXJhbSB7Kn0gJGV2ZW50DQogICAgICogQG1lbWJlcm9mIFRSTUxHQkNPU1RHcmlkVmlld0Jhc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgZ3JpZF9iZWZvcmVsb2FkKCRldmVudDogYW55LCAkZXZlbnQyPzogYW55KSB7DQogICAgICAgIHRoaXMuZW5naW5lLm9uQ3RybEV2ZW50KCdncmlkJywgJ2JlZm9yZWxvYWQnLCAkZXZlbnQpOw0KICAgIH0NCg0KDQogICAgLyoqDQogICAgICogZ3JpZCDpg6jku7Ygcm93ZGJsY2xpY2sg5LqL5Lu2DQogICAgICoNCiAgICAgKiBAcGFyYW0geyp9IFthcmdzPXt9XQ0KICAgICAqIEBwYXJhbSB7Kn0gJGV2ZW50DQogICAgICogQG1lbWJlcm9mIFRSTUxHQkNPU1RHcmlkVmlld0Jhc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgZ3JpZF9yb3dkYmxjbGljaygkZXZlbnQ6IGFueSwgJGV2ZW50Mj86IGFueSkgew0KICAgICAgICB0aGlzLmVuZ2luZS5vbkN0cmxFdmVudCgnZ3JpZCcsICdyb3dkYmxjbGljaycsICRldmVudCk7DQogICAgfQ0KDQoNCiAgICAvKioNCiAgICAgKiBncmlkIOmDqOS7tiByZW1vdmUg5LqL5Lu2DQogICAgICoNCiAgICAgKiBAcGFyYW0geyp9IFthcmdzPXt9XQ0KICAgICAqIEBwYXJhbSB7Kn0gJGV2ZW50DQogICAgICogQG1lbWJlcm9mIFRSTUxHQkNPU1RHcmlkVmlld0Jhc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgZ3JpZF9yZW1vdmUoJGV2ZW50OiBhbnksICRldmVudDI/OiBhbnkpIHsNCiAgICAgICAgdGhpcy5lbmdpbmUub25DdHJsRXZlbnQoJ2dyaWQnLCAncmVtb3ZlJywgJGV2ZW50KTsNCiAgICB9DQoNCg0KICAgIC8qKg0KICAgICAqIGdyaWQg6YOo5Lu2IGxvYWQg5LqL5Lu2DQogICAgICoNCiAgICAgKiBAcGFyYW0geyp9IFthcmdzPXt9XQ0KICAgICAqIEBwYXJhbSB7Kn0gJGV2ZW50DQogICAgICogQG1lbWJlcm9mIFRSTUxHQkNPU1RHcmlkVmlld0Jhc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgZ3JpZF9sb2FkKCRldmVudDogYW55LCAkZXZlbnQyPzogYW55KSB7DQogICAgICAgIHRoaXMuZW5naW5lLm9uQ3RybEV2ZW50KCdncmlkJywgJ2xvYWQnLCAkZXZlbnQpOw0KICAgIH0NCg0KDQogICAgLyoqDQogICAgICogc2VhcmNoZm9ybSDpg6jku7Ygc2F2ZSDkuovku7YNCiAgICAgKg0KICAgICAqIEBwYXJhbSB7Kn0gW2FyZ3M9e31dDQogICAgICogQHBhcmFtIHsqfSAkZXZlbnQNCiAgICAgKiBAbWVtYmVyb2YgVFJNTEdCQ09TVEdyaWRWaWV3QmFzZQ0KICAgICAqLw0KICAgIHB1YmxpYyBzZWFyY2hmb3JtX3NhdmUoJGV2ZW50OiBhbnksICRldmVudDI/OiBhbnkpIHsNCiAgICAgICAgdGhpcy5lbmdpbmUub25DdHJsRXZlbnQoJ3NlYXJjaGZvcm0nLCAnc2F2ZScsICRldmVudCk7DQogICAgfQ0KDQoNCiAgICAvKioNCiAgICAgKiBzZWFyY2hmb3JtIOmDqOS7tiBzZWFyY2gg5LqL5Lu2DQogICAgICoNCiAgICAgKiBAcGFyYW0geyp9IFthcmdzPXt9XQ0KICAgICAqIEBwYXJhbSB7Kn0gJGV2ZW50DQogICAgICogQG1lbWJlcm9mIFRSTUxHQkNPU1RHcmlkVmlld0Jhc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgc2VhcmNoZm9ybV9zZWFyY2goJGV2ZW50OiBhbnksICRldmVudDI/OiBhbnkpIHsNCiAgICAgICAgdGhpcy5lbmdpbmUub25DdHJsRXZlbnQoJ3NlYXJjaGZvcm0nLCAnc2VhcmNoJywgJGV2ZW50KTsNCiAgICB9DQoNCg0KICAgIC8qKg0KICAgICAqIHNlYXJjaGZvcm0g6YOo5Lu2IGxvYWQg5LqL5Lu2DQogICAgICoNCiAgICAgKiBAcGFyYW0geyp9IFthcmdzPXt9XQ0KICAgICAqIEBwYXJhbSB7Kn0gJGV2ZW50DQogICAgICogQG1lbWJlcm9mIFRSTUxHQkNPU1RHcmlkVmlld0Jhc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgc2VhcmNoZm9ybV9sb2FkKCRldmVudDogYW55LCAkZXZlbnQyPzogYW55KSB7DQogICAgICAgIHRoaXMuZW5naW5lLm9uQ3RybEV2ZW50KCdzZWFyY2hmb3JtJywgJ2xvYWQnLCAkZXZlbnQpOw0KICAgIH0NCg0KDQoNCiAgICAvKioNCiAgICAgKiDpgLvovpHkuovku7YNCiAgICAgKg0KICAgICAqIEBwYXJhbSB7Kn0gW3BhcmFtcz17fV0NCiAgICAgKiBAcGFyYW0geyp9IFt0YWddDQogICAgICogQHBhcmFtIHsqfSBbJGV2ZW50XQ0KICAgICAqIEBtZW1iZXJvZiANCiAgICAgKi8NCiAgICBwdWJsaWMgdG9vbGJhcl90Yml0ZW0zX2NsaWNrKHBhcmFtczogYW55ID0ge30sIHRhZz86IGFueSwgJGV2ZW50PzogYW55KSB7DQogICAgICAgIC8vIOWPguaVsA0KICAgICAgICAvLyDlj5bmlbANCiAgICAgICAgbGV0IGRhdGFzOiBhbnlbXSA9IFtdOw0KICAgICAgICBsZXQgeERhdGE6IGFueSA9IG51bGw7DQogICAgICAgIC8vIF90aGlzIOaMh+WQkeWuueWZqOWvueixoQ0KICAgICAgICBjb25zdCBfdGhpczogYW55ID0gdGhpczsNCiAgICAgICAgbGV0IHBhcmFtSk86YW55ID0ge307DQogICAgICAgIGxldCBjb250ZXh0Sk86YW55ID0ge307DQogICAgICAgIHhEYXRhID0gdGhpcy4kcmVmcy5ncmlkOw0KICAgICAgICBpZiAoeERhdGEuZ2V0RGF0YXMgJiYgeERhdGEuZ2V0RGF0YXMgaW5zdGFuY2VvZiBGdW5jdGlvbikgew0KICAgICAgICAgICAgZGF0YXMgPSBbLi4ueERhdGEuZ2V0RGF0YXMoKV07DQogICAgICAgIH0NCiAgICAgICAgaWYocGFyYW1zKXsNCiAgICAgICAgICBkYXRhcyA9IFtwYXJhbXNdOw0KICAgICAgICB9DQogICAgICAgIC8vIOeVjOmdouihjOS4ug0KICAgICAgICB0aGlzLk5ldyhkYXRhcywgY29udGV4dEpPLHBhcmFtSk8sICAkZXZlbnQsIHhEYXRhLHRoaXMsIlRybUxnYkNvc3QiKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDpgLvovpHkuovku7YNCiAgICAgKg0KICAgICAqIEBwYXJhbSB7Kn0gW3BhcmFtcz17fV0NCiAgICAgKiBAcGFyYW0geyp9IFt0YWddDQogICAgICogQHBhcmFtIHsqfSBbJGV2ZW50XQ0KICAgICAqIEBtZW1iZXJvZiANCiAgICAgKi8NCiAgICBwdWJsaWMgdG9vbGJhcl90Yml0ZW04X2NsaWNrKHBhcmFtczogYW55ID0ge30sIHRhZz86IGFueSwgJGV2ZW50PzogYW55KSB7DQogICAgICAgIC8vIOWPguaVsA0KICAgICAgICAvLyDlj5bmlbANCiAgICAgICAgbGV0IGRhdGFzOiBhbnlbXSA9IFtdOw0KICAgICAgICBsZXQgeERhdGE6IGFueSA9IG51bGw7DQogICAgICAgIC8vIF90aGlzIOaMh+WQkeWuueWZqOWvueixoQ0KICAgICAgICBjb25zdCBfdGhpczogYW55ID0gdGhpczsNCiAgICAgICAgbGV0IHBhcmFtSk86YW55ID0ge307DQogICAgICAgIGxldCBjb250ZXh0Sk86YW55ID0ge307DQogICAgICAgIHhEYXRhID0gdGhpcy4kcmVmcy5ncmlkOw0KICAgICAgICBpZiAoeERhdGEuZ2V0RGF0YXMgJiYgeERhdGEuZ2V0RGF0YXMgaW5zdGFuY2VvZiBGdW5jdGlvbikgew0KICAgICAgICAgICAgZGF0YXMgPSBbLi4ueERhdGEuZ2V0RGF0YXMoKV07DQogICAgICAgIH0NCiAgICAgICAgaWYocGFyYW1zKXsNCiAgICAgICAgICBkYXRhcyA9IFtwYXJhbXNdOw0KICAgICAgICB9DQogICAgICAgIC8vIOeVjOmdouihjOS4ug0KICAgICAgICB0aGlzLlJlbW92ZShkYXRhcywgY29udGV4dEpPLHBhcmFtSk8sICAkZXZlbnQsIHhEYXRhLHRoaXMsIlRybUxnYkNvc3QiKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDpgLvovpHkuovku7YNCiAgICAgKg0KICAgICAqIEBwYXJhbSB7Kn0gW3BhcmFtcz17fV0NCiAgICAgKiBAcGFyYW0geyp9IFt0YWddDQogICAgICogQHBhcmFtIHsqfSBbJGV2ZW50XQ0KICAgICAqIEBtZW1iZXJvZiANCiAgICAgKi8NCiAgICBwdWJsaWMgdG9vbGJhcl90Yml0ZW0xOV9jbGljayhwYXJhbXM6IGFueSA9IHt9LCB0YWc/OiBhbnksICRldmVudD86IGFueSkgew0KICAgICAgICAvLyDlj4LmlbANCiAgICAgICAgLy8g5Y+W5pWwDQogICAgICAgIGxldCBkYXRhczogYW55W10gPSBbXTsNCiAgICAgICAgbGV0IHhEYXRhOiBhbnkgPSBudWxsOw0KICAgICAgICAvLyBfdGhpcyDmjIflkJHlrrnlmajlr7nosaENCiAgICAgICAgY29uc3QgX3RoaXM6IGFueSA9IHRoaXM7DQogICAgICAgIGxldCBwYXJhbUpPOmFueSA9IHt9Ow0KICAgICAgICBsZXQgY29udGV4dEpPOmFueSA9IHt9Ow0KICAgICAgICB4RGF0YSA9IHRoaXMuJHJlZnMuZ3JpZDsNCiAgICAgICAgaWYgKHhEYXRhLmdldERhdGFzICYmIHhEYXRhLmdldERhdGFzIGluc3RhbmNlb2YgRnVuY3Rpb24pIHsNCiAgICAgICAgICAgIGRhdGFzID0gWy4uLnhEYXRhLmdldERhdGFzKCldOw0KICAgICAgICB9DQogICAgICAgIGlmKHBhcmFtcyl7DQogICAgICAgICAgZGF0YXMgPSBbcGFyYW1zXTsNCiAgICAgICAgfQ0KICAgICAgICAvLyDnlYzpnaLooYzkuLoNCiAgICAgICAgdGhpcy5Ub2dnbGVGaWx0ZXIoZGF0YXMsIGNvbnRleHRKTyxwYXJhbUpPLCAgJGV2ZW50LCB4RGF0YSx0aGlzLCJUcm1MZ2JDb3N0Iik7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6YC76L6R5LqL5Lu2DQogICAgICoNCiAgICAgKiBAcGFyYW0geyp9IFtwYXJhbXM9e31dDQogICAgICogQHBhcmFtIHsqfSBbdGFnXQ0KICAgICAqIEBwYXJhbSB7Kn0gWyRldmVudF0NCiAgICAgKiBAbWVtYmVyb2YgDQogICAgICovDQogICAgcHVibGljIHRvb2xiYXJfdGJpdGVtMTNfY2xpY2socGFyYW1zOiBhbnkgPSB7fSwgdGFnPzogYW55LCAkZXZlbnQ/OiBhbnkpIHsNCiAgICAgICAgLy8g5Y+C5pWwDQogICAgICAgIC8vIOWPluaVsA0KICAgICAgICBsZXQgZGF0YXM6IGFueVtdID0gW107DQogICAgICAgIGxldCB4RGF0YTogYW55ID0gbnVsbDsNCiAgICAgICAgLy8gX3RoaXMg5oyH5ZCR5a655Zmo5a+56LGhDQogICAgICAgIGNvbnN0IF90aGlzOiBhbnkgPSB0aGlzOw0KICAgICAgICBsZXQgcGFyYW1KTzphbnkgPSB7fTsNCiAgICAgICAgbGV0IGNvbnRleHRKTzphbnkgPSB7fTsNCiAgICAgICAgeERhdGEgPSB0aGlzLiRyZWZzLmdyaWQ7DQogICAgICAgIGlmICh4RGF0YS5nZXREYXRhcyAmJiB4RGF0YS5nZXREYXRhcyBpbnN0YW5jZW9mIEZ1bmN0aW9uKSB7DQogICAgICAgICAgICBkYXRhcyA9IFsuLi54RGF0YS5nZXREYXRhcygpXTsNCiAgICAgICAgfQ0KICAgICAgICBpZihwYXJhbXMpew0KICAgICAgICAgIGRhdGFzID0gW3BhcmFtc107DQogICAgICAgIH0NCiAgICAgICAgLy8g55WM6Z2i6KGM5Li6DQogICAgICAgIHRoaXMuRXhwb3J0RXhjZWwoZGF0YXMsIGNvbnRleHRKTyxwYXJhbUpPLCAgJGV2ZW50LCB4RGF0YSx0aGlzLCJUcm1MZ2JDb3N0Iik7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6YC76L6R5LqL5Lu2DQogICAgICoNCiAgICAgKiBAcGFyYW0geyp9IFtwYXJhbXM9e31dDQogICAgICogQHBhcmFtIHsqfSBbdGFnXQ0KICAgICAqIEBwYXJhbSB7Kn0gWyRldmVudF0NCiAgICAgKiBAbWVtYmVyb2YgDQogICAgICovDQogICAgcHVibGljIHRvb2xiYXJfZGV1aWFjdGlvbjFfY2xpY2socGFyYW1zOiBhbnkgPSB7fSwgdGFnPzogYW55LCAkZXZlbnQ/OiBhbnkpIHsNCiAgICAgICAgLy8g5Y+C5pWwDQogICAgICAgIC8vIOWPluaVsA0KICAgICAgICBsZXQgZGF0YXM6IGFueVtdID0gW107DQogICAgICAgIGxldCB4RGF0YTogYW55ID0gbnVsbDsNCiAgICAgICAgLy8gX3RoaXMg5oyH5ZCR5a655Zmo5a+56LGhDQogICAgICAgIGNvbnN0IF90aGlzOiBhbnkgPSB0aGlzOw0KICAgICAgICBsZXQgcGFyYW1KTzphbnkgPSB7fTsNCiAgICAgICAgbGV0IGNvbnRleHRKTzphbnkgPSB7fTsNCiAgICAgICAgeERhdGEgPSB0aGlzLiRyZWZzLmdyaWQ7DQogICAgICAgIGlmICh4RGF0YS5nZXREYXRhcyAmJiB4RGF0YS5nZXREYXRhcyBpbnN0YW5jZW9mIEZ1bmN0aW9uKSB7DQogICAgICAgICAgICBkYXRhcyA9IFsuLi54RGF0YS5nZXREYXRhcygpXTsNCiAgICAgICAgfQ0KICAgICAgICBpZihwYXJhbXMpew0KICAgICAgICAgIGRhdGFzID0gW3BhcmFtc107DQogICAgICAgIH0NCiAgICAgICAgLy8g55WM6Z2i6KGM5Li6DQogICAgICAgIHRoaXMuT3BlblJvd0VkaXQoZGF0YXMsIGNvbnRleHRKTyxwYXJhbUpPLCAgJGV2ZW50LCB4RGF0YSx0aGlzLCJUcm1MZ2JDb3N0Iik7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6YC76L6R5LqL5Lu2DQogICAgICoNCiAgICAgKiBAcGFyYW0geyp9IFtwYXJhbXM9e31dDQogICAgICogQHBhcmFtIHsqfSBbdGFnXQ0KICAgICAqIEBwYXJhbSB7Kn0gWyRldmVudF0NCiAgICAgKiBAbWVtYmVyb2YgDQogICAgICovDQogICAgcHVibGljIHRvb2xiYXJfdGJpdGVtMThfY2xpY2socGFyYW1zOiBhbnkgPSB7fSwgdGFnPzogYW55LCAkZXZlbnQ/OiBhbnkpIHsNCiAgICAgICAgLy8g5Y+C5pWwDQogICAgICAgIC8vIOWPluaVsA0KICAgICAgICBsZXQgZGF0YXM6IGFueVtdID0gW107DQogICAgICAgIGxldCB4RGF0YTogYW55ID0gbnVsbDsNCiAgICAgICAgLy8gX3RoaXMg5oyH5ZCR5a655Zmo5a+56LGhDQogICAgICAgIGNvbnN0IF90aGlzOiBhbnkgPSB0aGlzOw0KICAgICAgICBsZXQgcGFyYW1KTzphbnkgPSB7fTsNCiAgICAgICAgbGV0IGNvbnRleHRKTzphbnkgPSB7fTsNCiAgICAgICAgeERhdGEgPSB0aGlzLiRyZWZzLmdyaWQ7DQogICAgICAgIGlmICh4RGF0YS5nZXREYXRhcyAmJiB4RGF0YS5nZXREYXRhcyBpbnN0YW5jZW9mIEZ1bmN0aW9uKSB7DQogICAgICAgICAgICBkYXRhcyA9IFsuLi54RGF0YS5nZXREYXRhcygpXTsNCiAgICAgICAgfQ0KICAgICAgICBpZihwYXJhbXMpew0KICAgICAgICAgIGRhdGFzID0gW3BhcmFtc107DQogICAgICAgIH0NCiAgICAgICAgLy8g55WM6Z2i6KGM5Li6DQogICAgICAgIHRoaXMuSGVscChkYXRhcywgY29udGV4dEpPLHBhcmFtSk8sICAkZXZlbnQsIHhEYXRhLHRoaXMsIlRybUxnYkNvc3QiKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmiZPlvIDmlrDlu7rmlbDmja7op4blm74NCiAgICAgKg0KICAgICAqIEBwYXJhbSB7YW55W119IGFyZ3MNCiAgICAgKiBAcGFyYW0geyp9IFtwYXJhbXNdDQogICAgICogQHBhcmFtIHsqfSBbZnVsbGFyZ3NdDQogICAgICogQHBhcmFtIHsqfSBbJGV2ZW50XQ0KICAgICAqIEBwYXJhbSB7Kn0gW3hEYXRhXQ0KICAgICAqIEBtZW1iZXJvZiBUUk1MR0JDT1NUR3JpZFZpZXcNCiAgICAgKi8NCiAgICBwdWJsaWMgbmV3ZGF0YShhcmdzOiBhbnlbXSxmdWxsYXJncz86YW55W10sIHBhcmFtcz86IGFueSwgJGV2ZW50PzogYW55LCB4RGF0YT86IGFueSkgew0KICAgICAgICBsZXQgbG9jYWxDb250ZXh0OmFueSA9IG51bGw7DQogICAgICAgIGxldCBsb2NhbFZpZXdQYXJhbTphbnkgPW51bGw7DQogICAgICAgIGNvbnN0IGRhdGE6IGFueSA9IHt9Ow0KICAgICAgICBpZihhcmdzWzBdLnNyZnNvdXJjZWtleSl7DQogICAgICAgICAgICBkYXRhLnNyZnNvdXJjZWtleSA9IGFyZ3NbMF0uc3Jmc291cmNla2V5Ow0KICAgICAgICB9DQogICAgICAgIGxldCB0ZW1wQ29udGV4dCA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5jb250ZXh0KSk7DQogICAgICAgIGRlbGV0ZSB0ZW1wQ29udGV4dC50cm1sZ2Jjb3N0Ow0KICAgICAgICBpZihhcmdzLmxlbmd0aCA+MCl7DQogICAgICAgICAgICBPYmplY3QuYXNzaWduKHRlbXBDb250ZXh0LGFyZ3NbMF0pOw0KICAgICAgICB9DQogICAgICAgIGNvbnN0IGRlUmVzUGFyYW1ldGVyczogYW55W10gPSBbXTsNCiAgICAgICAgY29uc3QgcGFyYW1ldGVyczogYW55W10gPSBbDQogICAgICAgICAgICB7IHBhdGhOYW1lOiAndHJtbGdiY29zdHMnLCBwYXJhbWV0ZXJOYW1lOiAndHJtbGdiY29zdCcgfSwNCiAgICAgICAgXTsNCiAgICAgICAgY29uc3QgX3RoaXM6IGFueSA9IHRoaXM7DQogICAgICAgIGNvbnN0IG9wZW5EcmF3ZXIgPSAodmlldzogYW55LCBkYXRhOiBhbnkpID0+IHsNCiAgICAgICAgICAgIGxldCBjb250YWluZXI6IFN1YmplY3Q8YW55PiA9IHRoaXMuJGFwcGRyYXdlci5vcGVuRHJhd2VyKHZpZXcsIHRlbXBDb250ZXh0LCBkYXRhKTsNCiAgICAgICAgICAgIGNvbnRhaW5lci5zdWJzY3JpYmUoKHJlc3VsdDogYW55KSA9PiB7DQogICAgICAgICAgICAgICAgaWYgKCFyZXN1bHQgfHwgIU9iamVjdC5pcyhyZXN1bHQucmV0LCAnT0snKSkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGlmICgheERhdGEgfHwgISh4RGF0YS5yZWZyZXNoIGluc3RhbmNlb2YgRnVuY3Rpb24pKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgeERhdGEucmVmcmVzaChyZXN1bHQuZGF0YXMpOw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0NCiAgICAgICAgY29uc3QgdmlldzogYW55ID0gew0KICAgICAgICAgICAgdmlld25hbWU6ICd0cm1sZ2Jjb3N0ZWRpdC12aWV3JywgDQogICAgICAgICAgICBoZWlnaHQ6IDAsIA0KICAgICAgICAgICAgd2lkdGg6IDEzNjYsICANCiAgICAgICAgICAgIHRpdGxlOiB0aGlzLiR0KCdlbnRpdGllcy50cm1sZ2Jjb3N0LnZpZXdzLmVkaXR2aWV3LnRpdGxlJyksDQogICAgICAgICAgICBwbGFjZW1lbnQ6ICdEUkFXRVJfUklHSFQnLA0KICAgICAgICB9Ow0KICAgICAgICBvcGVuRHJhd2VyKHZpZXcsIGRhdGEpOw0KICAgIH0NCg0KDQogICAgLyoqDQogICAgICog5omT5byA57yW6L6R5pWw5o2u6KeG5Zu+DQogICAgICoNCiAgICAgKiBAcGFyYW0ge2FueVtdfSBhcmdzDQogICAgICogQHBhcmFtIHsqfSBbcGFyYW1zXQ0KICAgICAqIEBwYXJhbSB7Kn0gW2Z1bGxhcmdzXQ0KICAgICAqIEBwYXJhbSB7Kn0gWyRldmVudF0NCiAgICAgKiBAcGFyYW0geyp9IFt4RGF0YV0NCiAgICAgKiBAbWVtYmVyb2YgVFJNTEdCQ09TVEdyaWRWaWV3DQogICAgICovDQogICAgcHVibGljIG9wZW5kYXRhKGFyZ3M6IGFueVtdLGZ1bGxhcmdzPzphbnlbXSxwYXJhbXM/OiBhbnksICRldmVudD86IGFueSwgeERhdGE/OiBhbnkpIHsNCiAgICAgICAgbGV0IGxvY2FsQ29udGV4dDphbnkgPSBudWxsOw0KICAgICAgICBsZXQgbG9jYWxWaWV3UGFyYW06YW55ID1udWxsOw0KICAgICAgICBjb25zdCBkYXRhOiBhbnkgPSB7fTsNCiAgICAgICAgbGV0IHRlbXBDb250ZXh0ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLmNvbnRleHQpKTsNCiAgICAgICAgaWYoYXJncy5sZW5ndGggPjApew0KICAgICAgICAgICAgT2JqZWN0LmFzc2lnbih0ZW1wQ29udGV4dCxhcmdzWzBdKTsNCiAgICAgICAgfQ0KICAgICAgICBjb25zdCBkZVJlc1BhcmFtZXRlcnM6IGFueVtdID0gW107DQogICAgICAgIGNvbnN0IHBhcmFtZXRlcnM6IGFueVtdID0gWw0KICAgICAgICAgICAgeyBwYXRoTmFtZTogJ3RybWxnYmNvc3RzJywgcGFyYW1ldGVyTmFtZTogJ3RybWxnYmNvc3QnIH0sDQogICAgICAgIF07DQogICAgICAgIGNvbnN0IF90aGlzOiBhbnkgPSB0aGlzOw0KICAgICAgICBjb25zdCBvcGVuRHJhd2VyID0gKHZpZXc6IGFueSwgZGF0YTogYW55KSA9PiB7DQogICAgICAgICAgICBsZXQgY29udGFpbmVyOiBTdWJqZWN0PGFueT4gPSB0aGlzLiRhcHBkcmF3ZXIub3BlbkRyYXdlcih2aWV3LCB0ZW1wQ29udGV4dCwgZGF0YSk7DQogICAgICAgICAgICBjb250YWluZXIuc3Vic2NyaWJlKChyZXN1bHQ6IGFueSkgPT4gew0KICAgICAgICAgICAgICAgIGlmICghcmVzdWx0IHx8ICFPYmplY3QuaXMocmVzdWx0LnJldCwgJ09LJykpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpZiAoIXhEYXRhIHx8ICEoeERhdGEucmVmcmVzaCBpbnN0YW5jZW9mIEZ1bmN0aW9uKSkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHhEYXRhLnJlZnJlc2gocmVzdWx0LmRhdGFzKTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICB9DQogICAgICAgIGNvbnN0IHZpZXc6IGFueSA9IHsNCiAgICAgICAgICAgIHZpZXduYW1lOiAndHJtbGdiY29zdGVkaXQtdmlldycsIA0KICAgICAgICAgICAgaGVpZ2h0OiAwLCANCiAgICAgICAgICAgIHdpZHRoOiAxMzY2LCAgDQogICAgICAgICAgICB0aXRsZTogdGhpcy4kdCgnZW50aXRpZXMudHJtbGdiY29zdC52aWV3cy5lZGl0dmlldy50aXRsZScpLA0KICAgICAgICAgICAgcGxhY2VtZW50OiAnRFJBV0VSX1JJR0hUJywNCiAgICAgICAgfTsNCiAgICAgICAgb3BlbkRyYXdlcih2aWV3LCBkYXRhKTsNCiAgICB9DQoNCg0KICAgIC8qKg0KICAgICAqIOaWsOW7ug0KICAgICAqDQogICAgICogQHBhcmFtIHthbnlbXX0gYXJncyDlvZPliY3mlbDmja4NCiAgICAgKiBAcGFyYW0ge2FueX0gY29udGV4dEpPIOihjOS4uumZhOWKoOS4iuS4i+aWhw0KICAgICAqIEBwYXJhbSB7Kn0gW3BhcmFtc10g6ZmE5Yqg5Y+C5pWwDQogICAgICogQHBhcmFtIHsqfSBbJGV2ZW50XSDkuovku7bmupANCiAgICAgKiBAcGFyYW0geyp9IFt4RGF0YV0gIOaJp+ihjOihjOS4uuaJgOmcgOW9k+WJjemDqOS7tg0KICAgICAqIEBwYXJhbSB7Kn0gW2FjdGlvbkNvbnRleHRdICDmiafooYzooYzkuLrkuIrkuIvmlocNCiAgICAgKiBAbWVtYmVyb2YgVFJNTEdCQ09TVEdyaWRWaWV3QmFzZQ0KICAgICAqLw0KICAgIHB1YmxpYyBOZXcoYXJnczogYW55W10sY29udGV4dEpPPzphbnksIHBhcmFtcz86IGFueSwgJGV2ZW50PzogYW55LCB4RGF0YT86IGFueSxhY3Rpb25Db250ZXh0Pzphbnksc3JmUGFyZW50RGVOYW1lPzpzdHJpbmcpIHsNCiAgICAgICAgIGNvbnN0IF90aGlzOiBhbnkgPSB0aGlzOw0KICAgICAgICBpZiAoX3RoaXMubmV3ZGF0YSAmJiBfdGhpcy5uZXdkYXRhIGluc3RhbmNlb2YgRnVuY3Rpb24pIHsNCiAgICAgICAgICAgIGNvbnN0IGRhdGE6IGFueSA9IHt9Ow0KICAgICAgICAgICAgX3RoaXMubmV3ZGF0YShbeyAuLi5kYXRhIH1dLFt7IC4uLmRhdGEgfV0sIHBhcmFtcywgJGV2ZW50LCB4RGF0YSk7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICBfdGhpcy4kTm90aWNlLmVycm9yKHsgdGl0bGU6ICfplJnor68nLCBkZXNjOiAnbmV3ZGF0YSDop4blm77lpITnkIbpgLvovpHkuI3lrZjlnKjvvIzor7fmt7vliqAhJyB9KTsNCiAgICAgICAgfQ0KICAgIH0NCiAgICAvKioNCiAgICAgKiDliKDpmaQNCiAgICAgKg0KICAgICAqIEBwYXJhbSB7YW55W119IGFyZ3Mg5b2T5YmN5pWw5o2uDQogICAgICogQHBhcmFtIHthbnl9IGNvbnRleHRKTyDooYzkuLrpmYTliqDkuIrkuIvmlocNCiAgICAgKiBAcGFyYW0geyp9IFtwYXJhbXNdIOmZhOWKoOWPguaVsA0KICAgICAqIEBwYXJhbSB7Kn0gWyRldmVudF0g5LqL5Lu25rqQDQogICAgICogQHBhcmFtIHsqfSBbeERhdGFdICDmiafooYzooYzkuLrmiYDpnIDlvZPliY3pg6jku7YNCiAgICAgKiBAcGFyYW0geyp9IFthY3Rpb25Db250ZXh0XSAg5omn6KGM6KGM5Li65LiK5LiL5paHDQogICAgICogQG1lbWJlcm9mIFRSTUxHQkNPU1RHcmlkVmlld0Jhc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgUmVtb3ZlKGFyZ3M6IGFueVtdLGNvbnRleHRKTz86YW55LCBwYXJhbXM/OiBhbnksICRldmVudD86IGFueSwgeERhdGE/OiBhbnksYWN0aW9uQ29udGV4dD86YW55LHNyZlBhcmVudERlTmFtZT86c3RyaW5nKSB7DQogICAgICAgIGNvbnN0IF90aGlzOiBhbnkgPSB0aGlzOw0KICAgICAgICBpZiAoIXhEYXRhIHx8ICEoeERhdGEucmVtb3ZlIGluc3RhbmNlb2YgRnVuY3Rpb24pKSB7DQogICAgICAgICAgICByZXR1cm4gOw0KICAgICAgICB9DQogICAgICAgIHhEYXRhLnJlbW92ZShhcmdzKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDov4fmu6QNCiAgICAgKg0KICAgICAqIEBwYXJhbSB7YW55W119IGFyZ3Mg5b2T5YmN5pWw5o2uDQogICAgICogQHBhcmFtIHthbnl9IGNvbnRleHRKTyDooYzkuLrpmYTliqDkuIrkuIvmlocNCiAgICAgKiBAcGFyYW0geyp9IFtwYXJhbXNdIOmZhOWKoOWPguaVsA0KICAgICAqIEBwYXJhbSB7Kn0gWyRldmVudF0g5LqL5Lu25rqQDQogICAgICogQHBhcmFtIHsqfSBbeERhdGFdICDmiafooYzooYzkuLrmiYDpnIDlvZPliY3pg6jku7YNCiAgICAgKiBAcGFyYW0geyp9IFthY3Rpb25Db250ZXh0XSAg5omn6KGM6KGM5Li65LiK5LiL5paHDQogICAgICogQG1lbWJlcm9mIFRSTUxHQkNPU1RHcmlkVmlld0Jhc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgVG9nZ2xlRmlsdGVyKGFyZ3M6IGFueVtdLGNvbnRleHRKTz86YW55LCBwYXJhbXM/OiBhbnksICRldmVudD86IGFueSwgeERhdGE/OiBhbnksYWN0aW9uQ29udGV4dD86YW55LHNyZlBhcmVudERlTmFtZT86c3RyaW5nKSB7DQogICAgICAgIGNvbnN0IF90aGlzOiBhbnkgPSB0aGlzOw0KICAgICAgICBpZiAoX3RoaXMuaGFzT3duUHJvcGVydHkoJ2lzRXhwYW5kU2VhcmNoRm9ybScpKSB7DQogICAgICAgICAgICBfdGhpcy5pc0V4cGFuZFNlYXJjaEZvcm0gPSAhX3RoaXMuaXNFeHBhbmRTZWFyY2hGb3JtOw0KICAgICAgICB9DQogICAgfQ0KICAgIC8qKg0KICAgICAqIOWvvOWHug0KICAgICAqDQogICAgICogQHBhcmFtIHthbnlbXX0gYXJncyDlvZPliY3mlbDmja4NCiAgICAgKiBAcGFyYW0ge2FueX0gY29udGV4dEpPIOihjOS4uumZhOWKoOS4iuS4i+aWhw0KICAgICAqIEBwYXJhbSB7Kn0gW3BhcmFtc10g6ZmE5Yqg5Y+C5pWwDQogICAgICogQHBhcmFtIHsqfSBbJGV2ZW50XSDkuovku7bmupANCiAgICAgKiBAcGFyYW0geyp9IFt4RGF0YV0gIOaJp+ihjOihjOS4uuaJgOmcgOW9k+WJjemDqOS7tg0KICAgICAqIEBwYXJhbSB7Kn0gW2FjdGlvbkNvbnRleHRdICDmiafooYzooYzkuLrkuIrkuIvmlocNCiAgICAgKiBAbWVtYmVyb2YgVFJNTEdCQ09TVEdyaWRWaWV3QmFzZQ0KICAgICAqLw0KICAgIHB1YmxpYyBFeHBvcnRFeGNlbChhcmdzOiBhbnlbXSxjb250ZXh0Sk8/OmFueSwgcGFyYW1zPzogYW55LCAkZXZlbnQ/OiBhbnksIHhEYXRhPzogYW55LGFjdGlvbkNvbnRleHQ/OmFueSxzcmZQYXJlbnREZU5hbWU/OnN0cmluZykgew0KICAgICAgICBjb25zdCBfdGhpczogYW55ID0gdGhpczsNCiAgICAgICAgaWYgKCF4RGF0YSB8fCAhKHhEYXRhLmV4cG9ydEV4Y2VsIGluc3RhbmNlb2YgRnVuY3Rpb24pIHx8ICEkZXZlbnQpIHsNCiAgICAgICAgICAgIHJldHVybiA7DQogICAgICAgIH0NCiAgICAgICAgeERhdGEuZXhwb3J0RXhjZWwoJGV2ZW50LmV4cG9ydHBhcm1zKTsNCiAgICB9DQogICAgLyoqDQogICAgICog5byA5ZCv6KGM57yW6L6RDQogICAgICoNCiAgICAgKiBAcGFyYW0ge2FueVtdfSBhcmdzIOW9k+WJjeaVsOaNrg0KICAgICAqIEBwYXJhbSB7YW55fSBjb250ZXh0Sk8g6KGM5Li66ZmE5Yqg5LiK5LiL5paHDQogICAgICogQHBhcmFtIHsqfSBbcGFyYW1zXSDpmYTliqDlj4LmlbANCiAgICAgKiBAcGFyYW0geyp9IFskZXZlbnRdIOS6i+S7tua6kA0KICAgICAqIEBwYXJhbSB7Kn0gW3hEYXRhXSAg5omn6KGM6KGM5Li65omA6ZyA5b2T5YmN6YOo5Lu2DQogICAgICogQHBhcmFtIHsqfSBbYWN0aW9uQ29udGV4dF0gIOaJp+ihjOihjOS4uuS4iuS4i+aWhw0KICAgICAqIEBtZW1iZXJvZiBUUk1MR0JDT1NUR3JpZFZpZXdCYXNlDQogICAgICovDQogICAgcHJvdGVjdGVkIE9wZW5Sb3dFZGl0KGFyZ3M6IGFueVtdLGNvbnRleHRKTz86YW55LCBwYXJhbXM/OiBhbnksICRldmVudD86IGFueSwgeERhdGE/OiBhbnksYWN0aW9uQ29udGV4dD86YW55LHNyZlBhcmVudERlTmFtZT86c3RyaW5nKSB7DQogICAgICAgIA0KICAgIH0NCiAgICAvKioNCiAgICAgKiDluK7liqkNCiAgICAgKg0KICAgICAqIEBwYXJhbSB7YW55W119IGFyZ3Mg5b2T5YmN5pWw5o2uDQogICAgICogQHBhcmFtIHthbnl9IGNvbnRleHRKTyDooYzkuLrpmYTliqDkuIrkuIvmlocNCiAgICAgKiBAcGFyYW0geyp9IFtwYXJhbXNdIOmZhOWKoOWPguaVsA0KICAgICAqIEBwYXJhbSB7Kn0gWyRldmVudF0g5LqL5Lu25rqQDQogICAgICogQHBhcmFtIHsqfSBbeERhdGFdICDmiafooYzooYzkuLrmiYDpnIDlvZPliY3pg6jku7YNCiAgICAgKiBAcGFyYW0geyp9IFthY3Rpb25Db250ZXh0XSAg5omn6KGM6KGM5Li65LiK5LiL5paHDQogICAgICogQG1lbWJlcm9mIFRSTUxHQkNPU1RHcmlkVmlld0Jhc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgSGVscChhcmdzOiBhbnlbXSxjb250ZXh0Sk8/OmFueSwgcGFyYW1zPzogYW55LCAkZXZlbnQ/OiBhbnksIHhEYXRhPzogYW55LGFjdGlvbkNvbnRleHQ/OmFueSxzcmZQYXJlbnREZU5hbWU/OnN0cmluZykgew0KICAgICAgICB0aGlzLiROb3RpY2UuZXJyb3IoeyB0aXRsZTogJ+mUmeivrycsIGRlc2M6ICfluK7liqnmnKrmlK/mjIEnIH0pOw0KICAgIH0NCg0KDQogICAgLyoqDQogICAgICog6ZSA5q+B6KeG5Zu+5Zue6LCDDQogICAgICoNCiAgICAgKiBAbWVtYmVyb2YgVFJNTEdCQ09TVEdyaWRWaWV3QmFzZQ0KICAgICAqLw0KICAgIHB1YmxpYyBkZXN0cm95ZWQoKXsNCiAgICAgICAgaWYodGhpcy52aWV3RGVmYXVsdFVzYWdlKXsNCiAgICAgICAgICAgIGxldCBsb2NhbFN0b3JlTGVuZ3RoID0gT2JqZWN0LmtleXMobG9jYWxTdG9yYWdlKTsNCiAgICAgICAgICAgIGlmKGxvY2FsU3RvcmVMZW5ndGgubGVuZ3RoID4gMCl7DQogICAgICAgICAgICAgICAgbG9jYWxTdG9yZUxlbmd0aC5mb3JFYWNoKChpdGVtOnN0cmluZykgPT57DQogICAgICAgICAgICAgICAgaWYoaXRlbS5zdGFydHNXaXRoKHRoaXMuY29udGV4dC5zcmZzZXNzaW9uaWQpKXsNCiAgICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oaXRlbSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCg0KICAgIC8qKg0KICAgICAqIOaYr+WQpuWNlemAiQ0KICAgICAqDQogICAgICogQHR5cGUge2Jvb2xlYW59DQogICAgICogQG1lbWJlcm9mIFRSTUxHQkNPU1RHcmlkVmlld0Jhc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgaXNTaW5nbGVTZWxlY3Q6IGJvb2xlYW4gPSBmYWxzZTsNCg0KDQogICAgLyoqDQogICAgICogVnVl5aOw5piO5ZGo5pyfDQogICAgICoNCiAgICAgKiBAbWVtYmVyb2YgVmlld0Jhc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgY3JlYXRlZCgpIHsNCiAgICAgICAgc3VwZXIuY3JlYXRlZCgpOw0KICAgICAgICBpZih0aGlzLmZvcm1EcnVpcGFydCl7DQogICAgICAgICAgICB0aGlzLmZvcm1EcnVpcGFydC5zdWJzY3JpYmUoKHJlczphbnkpID0+ew0KICAgICAgICAgICAgICAgIGlmKE9iamVjdC5pcyhyZXMuYWN0aW9uLCdzYXZlJykpew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnZpZXdTdGF0ZS5uZXh0KHsgdGFnOidncmlkJywgYWN0aW9uOiAnc2F2ZScsIGRhdGE6IHRoaXMudmlld3BhcmFtcyB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgaWYoT2JqZWN0LmlzKHJlcy5hY3Rpb24sJ2xvYWQnKSl7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IF90aGlzOiBhbnkgPSB0aGlzOw0KICAgICAgICAgICAgICAgICAgICBfdGhpcy5lbmdpbmUubG9hZChyZXMuZGF0YSx0cnVlKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KTsNCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8qKg0KICAgICog55WM6Z2i5YWz57O76YCa6K6v5a+56LGhDQogICAgKg0KICAgICogQHR5cGUge1N1YmplY3Q8Vmlld1N0YXRlPn0NCiAgICAqIEBtZW1iZXJvZiBUUk1MR0JDT1NUR3JpZFZpZXdCYXNlDQogICAgKi8NCiAgICBAUHJvcCgpIHB1YmxpYyBmb3JtRHJ1aXBhcnQ/OiBTdWJqZWN0PFZpZXdTdGF0ZT47DQoNCiAgICAvKioNCiAgICAgKiDmkJzntKLlgLwNCiAgICAgKg0KICAgICAqIEB0eXBlIHtzdHJpbmd9DQogICAgICogQG1lbWJlcm9mIFRSTUxHQkNPU1RHcmlkVmlld0Jhc2UNCiAgICAgKi8NCiAgICBwdWJsaWMgcXVlcnk6IHN0cmluZyA9ICcnOw0KDQogICAgLyoqDQogICAgICog5piv5ZCm5bGV5byA5pCc57Si6KGo5Y2VDQogICAgICoNCiAgICAgKiBAdHlwZSB7Ym9vbGVhbn0NCiAgICAgKiBAbWVtYmVyb2YgVFJNTEdCQ09TVEdyaWRWaWV3QmFzZQ0KICAgICAqLw0KICAgIHB1YmxpYyBpc0V4cGFuZFNlYXJjaEZvcm06IGJvb2xlYW4gPSBmYWxzZTsNCg0KICAgIC8qKg0KICAgICAqIOihqOagvOihjOaVsOaNrum7mOiupOa/gOa0u+aooeW8jw0KICAgICAqIDAg5LiN5r+A5rS7DQogICAgICogMSDljZXlh7vmv4DmtLsNCiAgICAgKiAyIOWPjOWHu+a/gOa0uw0KICAgICAqDQogICAgICogQHR5cGUgeyhudW1iZXIgfCAwIHwgMSB8IDIpfQ0KICAgICAqIEBtZW1iZXJvZiBUUk1MR0JDT1NUR3JpZFZpZXdCYXNlDQogICAgICovDQogICAgcHVibGljIGdyaWRSb3dBY3RpdmVNb2RlOiBudW1iZXIgfCAwIHwgMSB8IDIgPSAyOw0KDQogICAgLyoqDQogICAgICog5b+r6YCf5pCc57SiDQogICAgICoNCiAgICAgKiBAcGFyYW0geyp9ICRldmVudA0KICAgICAqIEBtZW1iZXJvZiBUUk1MR0JDT1NUR3JpZFZpZXdCYXNlDQogICAgICovDQogICAgcHVibGljIG9uU2VhcmNoKCRldmVudDogYW55KTogdm9pZCB7DQogICAgICAgIGNvbnN0IGdyaWQ6IGFueSA9IHRoaXMuJHJlZnMuZ3JpZDsNCiAgICAgICAgaWYgKGdyaWQpIHsNCiAgICAgICAgICAgIGdyaWQubG9hZCh0aGlzLmNvbnRleHQpOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICogZ3JpZCDpg6jku7Ygc2F2ZSDkuovku7YNCiAgICAgKg0KICAgICAqIEBwYXJhbSB7Kn0gW2FyZ3M9e31dDQogICAgICogQHBhcmFtIHsqfSAkZXZlbnQNCiAgICAgKiBAbWVtYmVyb2YgRU5USVRZVEVTVDFVc3IyR3JpZFZpZXdCYXNlDQogICAgICovDQogICAgcHVibGljIG9uU2F2ZSgkZXZlbnQ6IGFueSkgew0KICAgICAgICB0aGlzLiRlbWl0KCdkcmRhdGFzYXZlZCcsICRldmVudCk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5Yi35paw5pWw5o2uDQogICAgICoNCiAgICAgKiBAcmVhZG9ubHkNCiAgICAgKiBAdHlwZSB7KG51bWJlciB8IG51bGwpfQ0KICAgICAqIEBtZW1iZXJvZiBUUk1MR0JDT1NUR3JpZFZpZXdCYXNlDQogICAgICovDQogICAgZ2V0IHJlZnJlc2hkYXRhKCk6IG51bWJlciB8IG51bGwgew0KICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVyc1sndmlld2FjdGlvbi9nZXRSZWZyZXNoRGF0YSddKHRoaXMudmlld3RhZyk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog55uR5o6n5pWw5o2u5Y+Y5YyWDQogICAgICoNCiAgICAgKiBAcGFyYW0geyp9IG5ld1ZhbA0KICAgICAqIEBwYXJhbSB7Kn0gb2xkVmFsDQogICAgICogQHJldHVybnMNCiAgICAgKiBAbWVtYmVyb2YgVFJNTEdCQ09TVEdyaWRWaWV3QmFzZQ0KICAgICAqLw0KICAgIEBXYXRjaCgncmVmcmVzaGRhdGEnKQ0KICAgIG9uUmVmcmVzaERhdGEobmV3VmFsOiBhbnksIG9sZFZhbDogYW55KSB7DQogICAgICAgIGlmIChuZXdWYWwgPT09IG51bGwgfHwgbmV3VmFsID09PSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KICAgICAgICBpZiAobmV3VmFsID09PSAwKSB7DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCiAgICAgICAgY29uc3QgZ3JpZDogYW55ID0gdGhpcy4kcmVmcy5ncmlkOw0KICAgICAgICBpZiAoZ3JpZCkgew0KICAgICAgICAgICAgZ3JpZC5sb2FkKHt9KTsNCiAgICAgICAgfQ0KICAgIH0NCg0KfQ0K"},null]}