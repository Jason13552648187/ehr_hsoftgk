{"remainingRequest":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\src\\components\\app-column-link\\app-column-link.vue?vue&type=script&lang=ts&","dependencies":[{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\src\\components\\app-column-link\\app-column-link.vue","mtime":1630509408660},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630511852775},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1630511853252},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\babel-loader\\lib\\index.js","mtime":1630511852747},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\ts-loader\\index.js","mtime":1630511985412},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630511852775},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\vue-loader\\lib\\index.js","mtime":1630512070338}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKDQppbXBvcnQgeyBWdWUsIENvbXBvbmVudCxQcm9wIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7DQppbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7DQovKioNCiAqIOihqOagvOWIl+mTvuaOpQ0KICovDQpAQ29tcG9uZW50KHsNCn0pDQpleHBvcnQgZGVmYXVsdCBjbGFzcyBBcHBDb2x1bW5MaW5rIGV4dGVuZHMgVnVlIHsNCg0KICAgIC8qKg0KICAgICAqIOihqOagvOihjOaVsOaNrg0KICAgICAqDQogICAgICogQHR5cGUgeyp9DQogICAgICogQG1lbWJlcm9mIEFwcENvbHVtbkxpbmsNCiAgICAgKi8NCiAgICBAUHJvcCgpIHB1YmxpYyBkYXRhITogYW55Ow0KDQogICAgLyoqDQogICAgICog5pWw5o2u6ZO+5o6l6KeG5Zu+DQogICAgICoNCiAgICAgKiBAdHlwZSB7Kn0NCiAgICAgKiBAbWVtYmVyb2YgQXBwQ29sdW1uTGluaw0KICAgICAqLw0KICAgIEBQcm9wKCkgcHVibGljIGxpbmt2aWV3PzogYW55Ow0KDQogICAgLyoqDQogICAgICog5YC86aG55ZCN56ewDQogICAgICoNCiAgICAgKiBAdHlwZSB7c3RyaW5nfQ0KICAgICAqIEBtZW1iZXJvZiBBcHBDb2x1bW5MaW5rDQogICAgICovDQogICAgQFByb3AoKSBwdWJsaWMgdmFsdWVpdGVtPzogc3RyaW5nOw0KDQogICAgLyoqDQogICAgICog5a+86Iiq5LiK5LiL5paHDQogICAgICoNCiAgICAgKiBAdHlwZSB7Kn0NCiAgICAgKiBAbWVtYmVyb2YgQXBwQ29sdW1uTGluaw0KICAgICAqLw0KICAgIEBQcm9wKHtkZWZhdWx0Ont9fSkgcHVibGljIGNvbnRleHQ/OmFueTsNCg0KICAgIC8qKg0KICAgICAqIOWvvOiIquWPguaVsA0KICAgICAqDQogICAgICogQHR5cGUgeyp9DQogICAgICogQG1lbWJlcm9mIEFwcENvbHVtbkxpbmsNCiAgICAgKi8NCiAgICBAUHJvcCh7ZGVmYXVsdDp7fX0pIHB1YmxpYyB2aWV3cGFyYW1zPzphbnk7DQoNCiAgICAvKioNCiAgICAgKiDlupTnlKjlrp7kvZPkuLvplK7lsZ7mgKflkI3np7ANCiAgICAgKg0KICAgICAqIEB0eXBlIHtzdHJpbmd9DQogICAgICogQG1lbWJlcm9mIEFwcENvbHVtbkxpbmsNCiAgICAgKi8NCiAgICBAUHJvcCgpIHB1YmxpYyBkZUtleUZpZWxkITpzdHJpbmc7DQoNCiAgICAvKioNCiAgICAgKiDmiZPlvIDpk77mjqXop4blm74NCiAgICAgKg0KICAgICAqIEBtZW1iZXJvZiBBcHBDb2x1bW5MaW5rDQogICAgICovDQogICAgcHVibGljIG9wZW5MaW5rVmlldygkZXZlbnQ6IGFueSk6IHZvaWQgew0KICAgICAgICAkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7DQogICAgICAgIGlmICghdGhpcy5kYXRhIHx8ICF0aGlzLnZhbHVlaXRlbSB8fCAhdGhpcy5kYXRhW3RoaXMudmFsdWVpdGVtXSkgew0KICAgICAgICAgICAgdGhpcy4kTm90aWNlLmVycm9yKHsgdGl0bGU6ICh0aGlzLiR0KCdjb21wb25lbnRzLmFwcENvbHVtbkxpbmsuZXJyb3InKSBhcyBzdHJpbmcpLCBkZXNjOiAodGhpcy4kdCgnY29tcG9uZW50cy5hcHBDb2x1bW5MaW5rLnZhbHVlSXRlbUV4Y2VwdGlvbicpIGFzIHN0cmluZykgfSk7DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCiAgICAgICAgLy8g5YWs5YWx5Y+C5pWw5aSE55CGDQogICAgICAgIGxldCBkYXRhOiBhbnkgPSB7fTsNCiAgICAgICAgY29uc3QgYmNhbmNlbDogYm9vbGVhbiA9IHRoaXMuaGFuZGxlUHVibGljUGFyYW1zKGRhdGEpOw0KICAgICAgICBpZiAoIWJjYW5jZWwpIHsNCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KICAgICAgICAvLyDlj4LmlbDlpITnkIYNCiAgICAgICAgbGV0IF9jb250ZXh0ID0gZGF0YS5jb250ZXh0Ow0KICAgICAgICBsZXQgX3BhcmFtID0gZGF0YS5wYXJhbTsNCiAgICAgICAgT2JqZWN0LmFzc2lnbihfY29udGV4dCwgeyBbdGhpcy5kZUtleUZpZWxkXTogdGhpcy5kYXRhW3RoaXMudmFsdWVpdGVtXSB9KTsNCiAgICAgICAgY29uc3QgdmlldyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5saW5rdmlldykpOw0KICAgICAgICBjb25zdCB2aWV3bmFtZTI6IHN0cmluZyA9IHRoaXMuJHV0aWwuc3JmRmlsZVBhdGgyKHZpZXcudmlld25hbWUpOw0KICAgICAgICB2aWV3LnZpZXduYW1lID0gdmlld25hbWUyOw0KDQogICAgICAgIGlmICh2aWV3LmlzUmVkaXJlY3RWaWV3KSB7DQogICAgICAgICAgICB0aGlzLm9wZW5SZWRpcmVjdFZpZXcoJGV2ZW50LCB2aWV3LCBkYXRhKTsNCiAgICAgICAgfSBlbHNlIGlmIChPYmplY3QuaXModmlldy5wbGFjZW1lbnQsICdJTkRFWFZJRVdUQUInKSB8fCBPYmplY3QuaXModmlldy5wbGFjZW1lbnQsICcnKSkgew0KICAgICAgICAgICAgdGhpcy5vcGVuSW5kZXhWaWV3VGFiKHZpZXcsIF9jb250ZXh0LCBfcGFyYW0pOw0KICAgICAgICB9IGVsc2UgaWYgKE9iamVjdC5pcyh2aWV3LnBsYWNlbWVudCwgJ1BPUE9WRVInKSkgew0KICAgICAgICAgICAgdGhpcy5vcGVuUG9wT3ZlcigkZXZlbnQsIHZpZXcsIF9jb250ZXh0LCBfcGFyYW0pOw0KICAgICAgICB9IGVsc2UgaWYgKE9iamVjdC5pcyh2aWV3LnBsYWNlbWVudCwgJ1BPUFVQTU9EQUwnKSkgew0KICAgICAgICAgICAgdGhpcy5vcGVuUG9wdXBNb2RhbCh2aWV3LCBfY29udGV4dCwgX3BhcmFtKTsNCiAgICAgICAgfSBlbHNlIGlmICh2aWV3LnBsYWNlbWVudC5zdGFydHNXaXRoKCdEUkFXRVInKSkgew0KICAgICAgICAgICAgdGhpcy5vcGVuRHJhd2VyKHZpZXcsIF9jb250ZXh0LCBfcGFyYW0pOw0KICAgICAgICB9DQogICAgfQ0KDQogICAgLyoqDQogICAgICog6Lev55Sx5qih5byP5omT5byA6KeG5Zu+DQogICAgICoNCiAgICAgKiBAcHJpdmF0ZQ0KICAgICAqIEBwYXJhbSB7c3RyaW5nfSB2aWV3cGF0aA0KICAgICAqIEBwYXJhbSB7Kn0gZGF0YQ0KICAgICAqIEBtZW1iZXJvZiBBcHBDb2x1bW5MaW5rDQogICAgICovDQogICAgcHJpdmF0ZSBvcGVuSW5kZXhWaWV3VGFiKHZpZXc6IGFueSwgY29udGV4dDogYW55LCBwYXJhbTogYW55KTogdm9pZCB7DQogICAgICAgIGNvbnN0IHJvdXRlUGF0aCA9IHRoaXMuJHZpZXdUb29sLmJ1aWxkVXBSb3V0ZVBhdGgodGhpcy4kcm91dGUsIHRoaXMuY29udGV4dCwgdmlldy5kZVJlc1BhcmFtZXRlcnMsIHZpZXcucGFyYW1ldGVycywgW2NvbnRleHRdICwgcGFyYW0pOw0KICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaChyb3V0ZVBhdGgpOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOaooeaAgeaooeW8j+aJk+W8gOinhuWbvg0KICAgICAqDQogICAgICogQHByaXZhdGUNCiAgICAgKiBAcGFyYW0geyp9IHZpZXcNCiAgICAgKiBAcGFyYW0geyp9IGRhdGENCiAgICAgKiBAbWVtYmVyb2YgQXBwQ29sdW1uTGluaw0KICAgICAqLw0KICAgIHByaXZhdGUgb3BlblBvcHVwTW9kYWwodmlldzogYW55LCBjb250ZXh0OiBhbnksIHBhcmFtOiBhbnkpOiB2b2lkIHsNCiAgICAgICAgbGV0IGNvbnRhaW5lcjogU3ViamVjdDxhbnk+ID0gdGhpcy4kYXBwbW9kYWwub3Blbk1vZGFsKHZpZXcsIGNvbnRleHQsIHBhcmFtKTsNCiAgICAgICAgY29udGFpbmVyLnN1YnNjcmliZSgocmVzdWx0OiBhbnkpID0+IHsNCiAgICAgICAgICAgIGlmICghcmVzdWx0IHx8ICFPYmplY3QuaXMocmVzdWx0LnJldCwgJ09LJykpIHsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQogICAgICAgICAgICB0aGlzLm9wZW5WaWV3Q2xvc2UocmVzdWx0KTsNCiAgICAgICAgfSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5oq95bGJ5qih5byP5omT5byA6KeG5Zu+DQogICAgICoNCiAgICAgKiBAcHJpdmF0ZQ0KICAgICAqIEBwYXJhbSB7Kn0gdmlldw0KICAgICAqIEBwYXJhbSB7Kn0gZGF0YQ0KICAgICAqIEBtZW1iZXJvZiBBcHBDb2x1bW5MaW5rDQogICAgICovDQogICAgcHJpdmF0ZSBvcGVuRHJhd2VyKHZpZXc6IGFueSwgY29udGV4dDogYW55LCBwYXJhbTogYW55KTogdm9pZCB7DQogICAgICAgIGxldCBjb250YWluZXI6IFN1YmplY3Q8YW55PiA9IHRoaXMuJGFwcGRyYXdlci5vcGVuRHJhd2VyKHZpZXcsIGNvbnRleHQsIHBhcmFtKTsNCiAgICAgICAgY29udGFpbmVyLnN1YnNjcmliZSgocmVzdWx0OiBhbnkpID0+IHsNCiAgICAgICAgICAgIGlmICghcmVzdWx0IHx8ICFPYmplY3QuaXMocmVzdWx0LnJldCwgJ09LJykpIHsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQogICAgICAgICAgICB0aGlzLm9wZW5WaWV3Q2xvc2UocmVzdWx0KTsNCiAgICAgICAgfSk7DQogICAgfQ0KDQogICAgLyoqDQogICAgICog5rCU5rOh5Y2h54mH5qih5byP5omT5byADQogICAgICoNCiAgICAgKiBAcHJpdmF0ZQ0KICAgICAqIEBwYXJhbSB7Kn0gJGV2ZW50DQogICAgICogQHBhcmFtIHsqfSB2aWV3DQogICAgICogQHBhcmFtIHsqfSBkYXRhDQogICAgICogQG1lbWJlcm9mIEFwcENvbHVtbkxpbmsNCiAgICAgKi8NCiAgICBwcml2YXRlIG9wZW5Qb3BPdmVyKCRldmVudDogYW55LCB2aWV3OiBhbnksIGNvbnRleHQ6IGFueSwgcGFyYW06IGFueSk6IHZvaWQgew0KICAgICAgICBsZXQgY29udGFpbmVyOiBTdWJqZWN0PGFueT4gPSB0aGlzLiRhcHBwb3BvdmVyLm9wZW5Qb3AoJGV2ZW50LCB2aWV3LCBjb250ZXh0LCBwYXJhbSk7DQogICAgICAgIGNvbnRhaW5lci5zdWJzY3JpYmUoKHJlc3VsdDogYW55KSA9PiB7DQogICAgICAgICAgICBpZiAoIXJlc3VsdCB8fCAhT2JqZWN0LmlzKHJlc3VsdC5yZXQsICdPSycpKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgdGhpcy5vcGVuVmlld0Nsb3NlKHJlc3VsdCk7DQogICAgICAgIH0pOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOeLrOeri+mHjOmdouW8ueWHug0KICAgICAqDQogICAgICogQHByaXZhdGUNCiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXJsDQogICAgICogQG1lbWJlcm9mIEFwcENvbHVtbkxpbmsNCiAgICAgKi8NCiAgICBwcml2YXRlIG9wZW5Qb3B1cEFwcCh1cmw6IHN0cmluZyk6IHZvaWQgew0KICAgICAgICB3aW5kb3cub3Blbih1cmwsICdfYmxhbmsnKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDmiZPlvIDph43lrprlkJHop4blm74NCiAgICAgKg0KICAgICAqIEBwcml2YXRlDQogICAgICogQHBhcmFtIHsqfSAkZXZlbnQNCiAgICAgKiBAcGFyYW0geyp9IHZpZXcNCiAgICAgKiBAcGFyYW0geyp9IGRhdGENCiAgICAgKiBAbWVtYmVyb2YgQXBwQ29sdW1uTGluaw0KICAgICAqLw0KICAgIHByaXZhdGUgb3BlblJlZGlyZWN0VmlldygkZXZlbnQ6IGFueSwgdmlldzogYW55LCBkYXRhOiBhbnkpOiB2b2lkIHsNCiAgICAgICAgdGhpcy4kaHR0cC5nZXQodmlldy51cmwsIGRhdGEpLnRoZW4oKHJlc3BvbnNlOiBhbnkpID0+IHsNCiAgICAgICAgICAgIGlmICghcmVzcG9uc2UgfHwgcmVzcG9uc2Uuc3RhdHVzICE9PSAyMDApIHsNCiAgICAgICAgICAgICAgICB0aGlzLiROb3RpY2UuZXJyb3IoeyB0aXRsZTogJ+mUmeivrycsIGRlc2M6ICfor7fmsYLlvILluLgnIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgY29uc3QgeyBkYXRhOiByZXN1bHQgfSA9IHJlc3BvbnNlOw0KDQogICAgICAgICAgICBpZiAocmVzdWx0LnZpZXdwYXJhbXMgJiYgIU9iamVjdC5pcyhyZXN1bHQudmlld3BhcmFtcy5zcmZrZXksICcnKSkgew0KICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oZGF0YSwgeyBzcmZrZXk6IHJlc3VsdC52aWV3cGFyYW1zLnNyZmtleSB9KTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaWYgKE9iamVjdC5pcyhyZXN1bHQub3Blbm1vZGUsICdQT1BVUEFQUCcpICYmIHJlc3VsdC51cmwgJiYgIU9iamVjdC5pcyhyZXN1bHQudXJsLCAnJykpIHsNCiAgICAgICAgICAgICAgICB0aGlzLm9wZW5Qb3B1cEFwcChyZXN1bHQudXJsKTsNCiAgICAgICAgICAgIH0gZWxzZSBpZiAoT2JqZWN0LmlzKHJlc3VsdC5vcGVubW9kZSwgJ0lOREVYVklFV1RBQicpIHx8IE9iamVjdC5pcyhyZXN1bHQub3Blbm1vZGUsICcnKSkgew0KICAgICAgICAgICAgICAgIC8vIOaJgOacieaVsOaNruS/neaMgeWcqOWQjOS4gOe6pw0KICAgICAgICAgICAgICAgIGlmIChkYXRhLnNyZnBhcmVudGRhdGEpIHsNCiAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihkYXRhLCBkYXRhLnNyZnBhcmVudGRhdGEpOw0KICAgICAgICAgICAgICAgICAgICBkZWxldGUgZGF0YS5zcmZwYXJlbnRkYXRhOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB0aGlzLm9wZW5JbmRleFZpZXdUYWIodmlldywgbnVsbCwgZGF0YSk7DQogICAgICAgICAgICB9IGVsc2UgaWYgKE9iamVjdC5pcyhyZXN1bHQub3Blbm1vZGUsICdQT1BVUE1PREFMJykpIHsNCiAgICAgICAgICAgICAgICBjb25zdCB2aWV3bmFtZSA9IHRoaXMuJHV0aWwuc3JmRmlsZVBhdGgyKHJlc3VsdC52aWV3bmFtZSk7DQogICAgICAgICAgICAgICAgY29uc3QgdmlldzogYW55ID0gew0KICAgICAgICAgICAgICAgICAgICB2aWV3bmFtZTogdmlld25hbWUsDQogICAgICAgICAgICAgICAgICAgIHRpdGxlOiByZXN1bHQudGl0bGUsDQogICAgICAgICAgICAgICAgICAgIHdpZHRoOiByZXN1bHQud2lkdGgsDQogICAgICAgICAgICAgICAgICAgIGhlaWdodDogcmVzdWx0LmhlaWdodCwNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgdGhpcy5vcGVuUG9wdXBNb2RhbCh2aWV3LCBudWxsLGRhdGEpOw0KICAgICAgICAgICAgfSBlbHNlIGlmIChyZXN1bHQub3Blbm1vZGUuc3RhcnRzV2l0aCgnRFJBV0VSJykpIHsNCiAgICAgICAgICAgICAgICBjb25zdCB2aWV3bmFtZSA9IHRoaXMuJHV0aWwuc3JmRmlsZVBhdGgyKHJlc3VsdC52aWV3bmFtZSk7DQogICAgICAgICAgICAgICAgY29uc3QgdmlldzogYW55ID0gew0KICAgICAgICAgICAgICAgICAgICB2aWV3bmFtZTogdmlld25hbWUsDQogICAgICAgICAgICAgICAgICAgIHRpdGxlOiByZXN1bHQudGl0bGUsDQogICAgICAgICAgICAgICAgICAgIHdpZHRoOiByZXN1bHQud2lkdGgsDQogICAgICAgICAgICAgICAgICAgIGhlaWdodDogcmVzdWx0LmhlaWdodCwNCiAgICAgICAgICAgICAgICAgICAgcGxhY2VtZW50OiByZXN1bHQub3Blbm1vZGUsDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHRoaXMub3BlbkRyYXdlcih2aWV3LCBudWxsLCBkYXRhKTsNCiAgICAgICAgICAgIH0gZWxzZSBpZiAoT2JqZWN0LmlzKHJlc3VsdC5vcGVubW9kZSwgJ1BPUE9WRVInKSkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHZpZXduYW1lID0gdGhpcy4kdXRpbC5zcmZGaWxlUGF0aDIocmVzdWx0LnZpZXduYW1lKTsNCiAgICAgICAgICAgICAgICBjb25zdCB2aWV3OiBhbnkgPSB7DQogICAgICAgICAgICAgICAgICAgIHZpZXduYW1lOiB2aWV3bmFtZSwNCiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHJlc3VsdC50aXRsZSwNCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IHJlc3VsdC53aWR0aCwNCiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiByZXN1bHQuaGVpZ2h0LA0KICAgICAgICAgICAgICAgICAgICBwbGFjZW1lbnQ6IHJlc3VsdC5vcGVubW9kZSwNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgdGhpcy5vcGVuUG9wT3ZlcigkZXZlbnQsIHZpZXcsIG51bGwsIGRhdGEpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9KS5jYXRjaCgocmVzcG9uc2U6IGFueSkgPT4gew0KICAgICAgICAgICAgaWYgKCFyZXNwb25zZSB8fCAhcmVzcG9uc2Uuc3RhdHVzIHx8ICFyZXNwb25zZS5kYXRhKSB7DQogICAgICAgICAgICAgICAgdGhpcy4kTm90aWNlLmVycm9yKHsgdGl0bGU6ICfplJnor68nLCBkZXNjOiAn57O757uf5byC5bi477yBJyB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQogICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDEpIHsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQogICAgICAgIH0pOw0KICAgIH0NCg0KICAgIC8qKg0KICAgICAqIOaJk+W8gOmhtemdouWFs+mXrQ0KICAgICAqDQogICAgICogQHBhcmFtIHsqfSByZXN1bHQNCiAgICAgKiBAbWVtYmVyb2YgQXBwQ29sdW1uTGluaw0KICAgICAqLw0KICAgIHB1YmxpYyBvcGVuVmlld0Nsb3NlKHJlc3VsdDogYW55KSB7DQogICAgICAgIGxldCBpdGVtOiBhbnkgPSB7fTsNCiAgICAgICAgaWYgKHJlc3VsdC5kYXRhcyAmJiBBcnJheS5pc0FycmF5KHJlc3VsdC5kYXRhcykpIHsNCiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oaXRlbSwgcmVzdWx0LmRhdGFzWzBdKTsNCiAgICAgICAgfQ0KICAgICAgICBjb25zb2xlLmxvZyhpdGVtKTsNCiAgICB9DQoNCiAgICAvKioNCiAgICAgKiDlhazlhbHlj4LmlbDlpITnkIYNCiAgICAgKg0KICAgICAqIEBwYXJhbSB7Kn0gYXJnDQogICAgICogQHJldHVybnMNCiAgICAgKiBAbWVtYmVyb2YgQXBwQ29sdW1uTGluaw0KICAgICAqLw0KICAgIHB1YmxpYyBoYW5kbGVQdWJsaWNQYXJhbXMoYXJnOiBhbnkpOiBib29sZWFuIHsNCiAgICAgICAgaWYgKCF0aGlzLmRhdGEpIHsNCiAgICAgICAgICAgIHRoaXMuJE5vdGljZS5lcnJvcih7IHRpdGxlOiAodGhpcy4kdCgnY29tcG9uZW50cy5hcHBDb2x1bW5MaW5rLmVycm9yJykgYXMgc3RyaW5nKSwgZGVzYzogKHRoaXMuJHQoJ2NvbXBvbmVudHMuYXBwQ29sdW1uTGluay5yb3dEYXRhRXhjZXB0aW9uJykgYXMgc3RyaW5nKSB9KTsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KICAgICAgICAvLyDlkIjlubbooajljZXlj4LmlbANCiAgICAgICAgYXJnLnBhcmFtID0gdGhpcy52aWV3cGFyYW1zID8gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLnZpZXdwYXJhbXMpKSA6IHt9Ow0KICAgICAgICBhcmcuY29udGV4dCA9IHRoaXMuY29udGV4dCA/IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5jb250ZXh0KSkgOiB7fTsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KDQoNCg0KfQ0K"},null]}