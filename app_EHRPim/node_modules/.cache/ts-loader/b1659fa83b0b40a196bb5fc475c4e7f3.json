{"remainingRequest":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\thread-loader\\dist\\cjs.js!F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\babel-loader\\lib\\index.js!F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\ts-loader\\index.js??ref--13-3!F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\src\\components\\app-column-link\\app-column-link.vue?vue&type=script&lang=ts&","dependencies":[{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\src\\components\\app-column-link\\app-column-link.vue","mtime":1630509408660},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630511852775},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1630511853252},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\babel-loader\\lib\\index.js","mtime":1630511852747},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\ts-loader\\index.js","mtime":1630511985412},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630511852775},{"path":"F:\\crod项目\\人事管理系统2\\iBizEHR\\app_EHRPim\\node_modules\\vue-loader\\lib\\index.js","mtime":1630512070338}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXMtYXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuaXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3RhcnRzLXdpdGgiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIkY6XFxjcm9kXHU5ODc5XHU3NkVFXFxcdTRFQkFcdTRFOEJcdTdCQTFcdTc0MDZcdTdDRkJcdTdFREYyXFxpQml6RUhSXFxhcHBfRUhSUGltXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiRjpcXGNyb2RcdTk4NzlcdTc2RUVcXFx1NEVCQVx1NEU4Qlx1N0JBMVx1NzQwNlx1N0NGQlx1N0VERjJcXGlCaXpFSFJcXGFwcF9FSFJQaW1cXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJGOlxcY3JvZFx1OTg3OVx1NzZFRVxcXHU0RUJBXHU0RThCXHU3QkExXHU3NDA2XHU3Q0ZCXHU3RURGMlxcaUJpekVIUlxcYXBwX0VIUlBpbVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSAiRjpcXGNyb2RcdTk4NzlcdTc2RUVcXFx1NEVCQVx1NEU4Qlx1N0JBMVx1NzQwNlx1N0NGQlx1N0VERjJcXGlCaXpFSFJcXGFwcF9FSFJQaW1cXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iOwppbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gIkY6XFxjcm9kXHU5ODc5XHU3NkVFXFxcdTRFQkFcdTRFOEJcdTdCQTFcdTc0MDZcdTdDRkJcdTdFREYyXFxpQml6RUhSXFxhcHBfRUhSUGltXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9nZXRQcm90b3R5cGVPZiI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiRjpcXGNyb2RcdTk4NzlcdTc2RUVcXFx1NEVCQVx1NEU4Qlx1N0JBMVx1NzQwNlx1N0NGQlx1N0VERjJcXGlCaXpFSFJcXGFwcF9FSFJQaW1cXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CmltcG9ydCB7IFZ1ZSwgQ29tcG9uZW50LCBQcm9wIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7Ci8qKg0KICog6KGo5qC85YiX6ZO+5o6lDQogKi8KCnZhciBBcHBDb2x1bW5MaW5rID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoX1Z1ZSkgewogIF9pbmhlcml0cyhBcHBDb2x1bW5MaW5rLCBfVnVlKTsKCiAgZnVuY3Rpb24gQXBwQ29sdW1uTGluaygpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBBcHBDb2x1bW5MaW5rKTsKCiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKEFwcENvbHVtbkxpbmspLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEFwcENvbHVtbkxpbmssIFt7CiAgICBrZXk6ICJvcGVuTGlua1ZpZXciLAoKICAgIC8qKg0KICAgICAqIOaJk+W8gOmTvuaOpeinhuWbvg0KICAgICAqDQogICAgICogQG1lbWJlcm9mIEFwcENvbHVtbkxpbmsNCiAgICAgKi8KICAgIHZhbHVlOiBmdW5jdGlvbiBvcGVuTGlua1ZpZXcoJGV2ZW50KSB7CiAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKCiAgICAgIGlmICghdGhpcy5kYXRhIHx8ICF0aGlzLnZhbHVlaXRlbSB8fCAhdGhpcy5kYXRhW3RoaXMudmFsdWVpdGVtXSkgewogICAgICAgIHRoaXMuJE5vdGljZS5lcnJvcih7CiAgICAgICAgICB0aXRsZTogdGhpcy4kdCgnY29tcG9uZW50cy5hcHBDb2x1bW5MaW5rLmVycm9yJyksCiAgICAgICAgICBkZXNjOiB0aGlzLiR0KCdjb21wb25lbnRzLmFwcENvbHVtbkxpbmsudmFsdWVJdGVtRXhjZXB0aW9uJykKICAgICAgICB9KTsKICAgICAgICByZXR1cm47CiAgICAgIH0gLy8g5YWs5YWx5Y+C5pWw5aSE55CGCgoKICAgICAgdmFyIGRhdGEgPSB7fTsKICAgICAgdmFyIGJjYW5jZWwgPSB0aGlzLmhhbmRsZVB1YmxpY1BhcmFtcyhkYXRhKTsKCiAgICAgIGlmICghYmNhbmNlbCkgewogICAgICAgIHJldHVybjsKICAgICAgfSAvLyDlj4LmlbDlpITnkIYKCgogICAgICB2YXIgX2NvbnRleHQgPSBkYXRhLmNvbnRleHQ7CiAgICAgIHZhciBfcGFyYW0gPSBkYXRhLnBhcmFtOwogICAgICBPYmplY3QuYXNzaWduKF9jb250ZXh0LCBfZGVmaW5lUHJvcGVydHkoe30sIHRoaXMuZGVLZXlGaWVsZCwgdGhpcy5kYXRhW3RoaXMudmFsdWVpdGVtXSkpOwogICAgICB2YXIgdmlldyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5saW5rdmlldykpOwogICAgICB2YXIgdmlld25hbWUyID0gdGhpcy4kdXRpbC5zcmZGaWxlUGF0aDIodmlldy52aWV3bmFtZSk7CiAgICAgIHZpZXcudmlld25hbWUgPSB2aWV3bmFtZTI7CgogICAgICBpZiAodmlldy5pc1JlZGlyZWN0VmlldykgewogICAgICAgIHRoaXMub3BlblJlZGlyZWN0VmlldygkZXZlbnQsIHZpZXcsIGRhdGEpOwogICAgICB9IGVsc2UgaWYgKE9iamVjdC5pcyh2aWV3LnBsYWNlbWVudCwgJ0lOREVYVklFV1RBQicpIHx8IE9iamVjdC5pcyh2aWV3LnBsYWNlbWVudCwgJycpKSB7CiAgICAgICAgdGhpcy5vcGVuSW5kZXhWaWV3VGFiKHZpZXcsIF9jb250ZXh0LCBfcGFyYW0pOwogICAgICB9IGVsc2UgaWYgKE9iamVjdC5pcyh2aWV3LnBsYWNlbWVudCwgJ1BPUE9WRVInKSkgewogICAgICAgIHRoaXMub3BlblBvcE92ZXIoJGV2ZW50LCB2aWV3LCBfY29udGV4dCwgX3BhcmFtKTsKICAgICAgfSBlbHNlIGlmIChPYmplY3QuaXModmlldy5wbGFjZW1lbnQsICdQT1BVUE1PREFMJykpIHsKICAgICAgICB0aGlzLm9wZW5Qb3B1cE1vZGFsKHZpZXcsIF9jb250ZXh0LCBfcGFyYW0pOwogICAgICB9IGVsc2UgaWYgKHZpZXcucGxhY2VtZW50LnN0YXJ0c1dpdGgoJ0RSQVdFUicpKSB7CiAgICAgICAgdGhpcy5vcGVuRHJhd2VyKHZpZXcsIF9jb250ZXh0LCBfcGFyYW0pOwogICAgICB9CiAgICB9CiAgICAvKioNCiAgICAgKiDot6/nlLHmqKHlvI/miZPlvIDop4blm74NCiAgICAgKg0KICAgICAqIEBwcml2YXRlDQogICAgICogQHBhcmFtIHtzdHJpbmd9IHZpZXdwYXRoDQogICAgICogQHBhcmFtIHsqfSBkYXRhDQogICAgICogQG1lbWJlcm9mIEFwcENvbHVtbkxpbmsNCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAib3BlbkluZGV4Vmlld1RhYiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gb3BlbkluZGV4Vmlld1RhYih2aWV3LCBjb250ZXh0LCBwYXJhbSkgewogICAgICB2YXIgcm91dGVQYXRoID0gdGhpcy4kdmlld1Rvb2wuYnVpbGRVcFJvdXRlUGF0aCh0aGlzLiRyb3V0ZSwgdGhpcy5jb250ZXh0LCB2aWV3LmRlUmVzUGFyYW1ldGVycywgdmlldy5wYXJhbWV0ZXJzLCBbY29udGV4dF0sIHBhcmFtKTsKICAgICAgdGhpcy4kcm91dGVyLnB1c2gocm91dGVQYXRoKTsKICAgIH0KICAgIC8qKg0KICAgICAqIOaooeaAgeaooeW8j+aJk+W8gOinhuWbvg0KICAgICAqDQogICAgICogQHByaXZhdGUNCiAgICAgKiBAcGFyYW0geyp9IHZpZXcNCiAgICAgKiBAcGFyYW0geyp9IGRhdGENCiAgICAgKiBAbWVtYmVyb2YgQXBwQ29sdW1uTGluaw0KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJvcGVuUG9wdXBNb2RhbCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gb3BlblBvcHVwTW9kYWwodmlldywgY29udGV4dCwgcGFyYW0pIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBjb250YWluZXIgPSB0aGlzLiRhcHBtb2RhbC5vcGVuTW9kYWwodmlldywgY29udGV4dCwgcGFyYW0pOwogICAgICBjb250YWluZXIuc3Vic2NyaWJlKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICBpZiAoIXJlc3VsdCB8fCAhT2JqZWN0LmlzKHJlc3VsdC5yZXQsICdPSycpKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBfdGhpcy5vcGVuVmlld0Nsb3NlKHJlc3VsdCk7CiAgICAgIH0pOwogICAgfQogICAgLyoqDQogICAgICog5oq95bGJ5qih5byP5omT5byA6KeG5Zu+DQogICAgICoNCiAgICAgKiBAcHJpdmF0ZQ0KICAgICAqIEBwYXJhbSB7Kn0gdmlldw0KICAgICAqIEBwYXJhbSB7Kn0gZGF0YQ0KICAgICAqIEBtZW1iZXJvZiBBcHBDb2x1bW5MaW5rDQogICAgICovCgogIH0sIHsKICAgIGtleTogIm9wZW5EcmF3ZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG9wZW5EcmF3ZXIodmlldywgY29udGV4dCwgcGFyYW0pIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgY29udGFpbmVyID0gdGhpcy4kYXBwZHJhd2VyLm9wZW5EcmF3ZXIodmlldywgY29udGV4dCwgcGFyYW0pOwogICAgICBjb250YWluZXIuc3Vic2NyaWJlKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICBpZiAoIXJlc3VsdCB8fCAhT2JqZWN0LmlzKHJlc3VsdC5yZXQsICdPSycpKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBfdGhpczIub3BlblZpZXdDbG9zZShyZXN1bHQpOwogICAgICB9KTsKICAgIH0KICAgIC8qKg0KICAgICAqIOawlOazoeWNoeeJh+aooeW8j+aJk+W8gA0KICAgICAqDQogICAgICogQHByaXZhdGUNCiAgICAgKiBAcGFyYW0geyp9ICRldmVudA0KICAgICAqIEBwYXJhbSB7Kn0gdmlldw0KICAgICAqIEBwYXJhbSB7Kn0gZGF0YQ0KICAgICAqIEBtZW1iZXJvZiBBcHBDb2x1bW5MaW5rDQogICAgICovCgogIH0sIHsKICAgIGtleTogIm9wZW5Qb3BPdmVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBvcGVuUG9wT3ZlcigkZXZlbnQsIHZpZXcsIGNvbnRleHQsIHBhcmFtKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdmFyIGNvbnRhaW5lciA9IHRoaXMuJGFwcHBvcG92ZXIub3BlblBvcCgkZXZlbnQsIHZpZXcsIGNvbnRleHQsIHBhcmFtKTsKICAgICAgY29udGFpbmVyLnN1YnNjcmliZShmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgaWYgKCFyZXN1bHQgfHwgIU9iamVjdC5pcyhyZXN1bHQucmV0LCAnT0snKSkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMzLm9wZW5WaWV3Q2xvc2UocmVzdWx0KTsKICAgICAgfSk7CiAgICB9CiAgICAvKioNCiAgICAgKiDni6znq4vph4zpnaLlvLnlh7oNCiAgICAgKg0KICAgICAqIEBwcml2YXRlDQogICAgICogQHBhcmFtIHtzdHJpbmd9IHVybA0KICAgICAqIEBtZW1iZXJvZiBBcHBDb2x1bW5MaW5rDQogICAgICovCgogIH0sIHsKICAgIGtleTogIm9wZW5Qb3B1cEFwcCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gb3BlblBvcHVwQXBwKHVybCkgewogICAgICB3aW5kb3cub3Blbih1cmwsICdfYmxhbmsnKTsKICAgIH0KICAgIC8qKg0KICAgICAqIOaJk+W8gOmHjeWumuWQkeinhuWbvg0KICAgICAqDQogICAgICogQHByaXZhdGUNCiAgICAgKiBAcGFyYW0geyp9ICRldmVudA0KICAgICAqIEBwYXJhbSB7Kn0gdmlldw0KICAgICAqIEBwYXJhbSB7Kn0gZGF0YQ0KICAgICAqIEBtZW1iZXJvZiBBcHBDb2x1bW5MaW5rDQogICAgICovCgogIH0sIHsKICAgIGtleTogIm9wZW5SZWRpcmVjdFZpZXciLAogICAgdmFsdWU6IGZ1bmN0aW9uIG9wZW5SZWRpcmVjdFZpZXcoJGV2ZW50LCB2aWV3LCBkYXRhKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdGhpcy4kaHR0cC5nZXQodmlldy51cmwsIGRhdGEpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgaWYgKCFyZXNwb25zZSB8fCByZXNwb25zZS5zdGF0dXMgIT09IDIwMCkgewogICAgICAgICAgX3RoaXM0LiROb3RpY2UuZXJyb3IoewogICAgICAgICAgICB0aXRsZTogJ+mUmeivrycsCiAgICAgICAgICAgIGRlc2M6ICfor7fmsYLlvILluLgnCiAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMSkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgdmFyIHJlc3VsdCA9IHJlc3BvbnNlLmRhdGE7CgogICAgICAgIGlmIChyZXN1bHQudmlld3BhcmFtcyAmJiAhT2JqZWN0LmlzKHJlc3VsdC52aWV3cGFyYW1zLnNyZmtleSwgJycpKSB7CiAgICAgICAgICBPYmplY3QuYXNzaWduKGRhdGEsIHsKICAgICAgICAgICAgc3Jma2V5OiByZXN1bHQudmlld3BhcmFtcy5zcmZrZXkKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgaWYgKE9iamVjdC5pcyhyZXN1bHQub3Blbm1vZGUsICdQT1BVUEFQUCcpICYmIHJlc3VsdC51cmwgJiYgIU9iamVjdC5pcyhyZXN1bHQudXJsLCAnJykpIHsKICAgICAgICAgIF90aGlzNC5vcGVuUG9wdXBBcHAocmVzdWx0LnVybCk7CiAgICAgICAgfSBlbHNlIGlmIChPYmplY3QuaXMocmVzdWx0Lm9wZW5tb2RlLCAnSU5ERVhWSUVXVEFCJykgfHwgT2JqZWN0LmlzKHJlc3VsdC5vcGVubW9kZSwgJycpKSB7CiAgICAgICAgICAvLyDmiYDmnInmlbDmja7kv53mjIHlnKjlkIzkuIDnuqcKICAgICAgICAgIGlmIChkYXRhLnNyZnBhcmVudGRhdGEpIHsKICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihkYXRhLCBkYXRhLnNyZnBhcmVudGRhdGEpOwogICAgICAgICAgICBkZWxldGUgZGF0YS5zcmZwYXJlbnRkYXRhOwogICAgICAgICAgfQoKICAgICAgICAgIF90aGlzNC5vcGVuSW5kZXhWaWV3VGFiKHZpZXcsIG51bGwsIGRhdGEpOwogICAgICAgIH0gZWxzZSBpZiAoT2JqZWN0LmlzKHJlc3VsdC5vcGVubW9kZSwgJ1BPUFVQTU9EQUwnKSkgewogICAgICAgICAgdmFyIHZpZXduYW1lID0gX3RoaXM0LiR1dGlsLnNyZkZpbGVQYXRoMihyZXN1bHQudmlld25hbWUpOwoKICAgICAgICAgIHZhciBfdmlldyA9IHsKICAgICAgICAgICAgdmlld25hbWU6IHZpZXduYW1lLAogICAgICAgICAgICB0aXRsZTogcmVzdWx0LnRpdGxlLAogICAgICAgICAgICB3aWR0aDogcmVzdWx0LndpZHRoLAogICAgICAgICAgICBoZWlnaHQ6IHJlc3VsdC5oZWlnaHQKICAgICAgICAgIH07CgogICAgICAgICAgX3RoaXM0Lm9wZW5Qb3B1cE1vZGFsKF92aWV3LCBudWxsLCBkYXRhKTsKICAgICAgICB9IGVsc2UgaWYgKHJlc3VsdC5vcGVubW9kZS5zdGFydHNXaXRoKCdEUkFXRVInKSkgewogICAgICAgICAgdmFyIF92aWV3bmFtZSA9IF90aGlzNC4kdXRpbC5zcmZGaWxlUGF0aDIocmVzdWx0LnZpZXduYW1lKTsKCiAgICAgICAgICB2YXIgX3ZpZXcyID0gewogICAgICAgICAgICB2aWV3bmFtZTogX3ZpZXduYW1lLAogICAgICAgICAgICB0aXRsZTogcmVzdWx0LnRpdGxlLAogICAgICAgICAgICB3aWR0aDogcmVzdWx0LndpZHRoLAogICAgICAgICAgICBoZWlnaHQ6IHJlc3VsdC5oZWlnaHQsCiAgICAgICAgICAgIHBsYWNlbWVudDogcmVzdWx0Lm9wZW5tb2RlCiAgICAgICAgICB9OwoKICAgICAgICAgIF90aGlzNC5vcGVuRHJhd2VyKF92aWV3MiwgbnVsbCwgZGF0YSk7CiAgICAgICAgfSBlbHNlIGlmIChPYmplY3QuaXMocmVzdWx0Lm9wZW5tb2RlLCAnUE9QT1ZFUicpKSB7CiAgICAgICAgICB2YXIgX3ZpZXduYW1lMiA9IF90aGlzNC4kdXRpbC5zcmZGaWxlUGF0aDIocmVzdWx0LnZpZXduYW1lKTsKCiAgICAgICAgICB2YXIgX3ZpZXczID0gewogICAgICAgICAgICB2aWV3bmFtZTogX3ZpZXduYW1lMiwKICAgICAgICAgICAgdGl0bGU6IHJlc3VsdC50aXRsZSwKICAgICAgICAgICAgd2lkdGg6IHJlc3VsdC53aWR0aCwKICAgICAgICAgICAgaGVpZ2h0OiByZXN1bHQuaGVpZ2h0LAogICAgICAgICAgICBwbGFjZW1lbnQ6IHJlc3VsdC5vcGVubW9kZQogICAgICAgICAgfTsKCiAgICAgICAgICBfdGhpczQub3BlblBvcE92ZXIoJGV2ZW50LCBfdmlldzMsIG51bGwsIGRhdGEpOwogICAgICAgIH0KICAgICAgfSlbImNhdGNoIl0oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgaWYgKCFyZXNwb25zZSB8fCAhcmVzcG9uc2Uuc3RhdHVzIHx8ICFyZXNwb25zZS5kYXRhKSB7CiAgICAgICAgICBfdGhpczQuJE5vdGljZS5lcnJvcih7CiAgICAgICAgICAgIHRpdGxlOiAn6ZSZ6K+vJywKICAgICAgICAgICAgZGVzYzogJ+ezu+e7n+W8guW4uO+8gScKICAgICAgICAgIH0pOwoKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMSkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgICAvKioNCiAgICAgKiDmiZPlvIDpobXpnaLlhbPpl60NCiAgICAgKg0KICAgICAqIEBwYXJhbSB7Kn0gcmVzdWx0DQogICAgICogQG1lbWJlcm9mIEFwcENvbHVtbkxpbmsNCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAib3BlblZpZXdDbG9zZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gb3BlblZpZXdDbG9zZShyZXN1bHQpIHsKICAgICAgdmFyIGl0ZW0gPSB7fTsKCiAgICAgIGlmIChyZXN1bHQuZGF0YXMgJiYgQXJyYXkuaXNBcnJheShyZXN1bHQuZGF0YXMpKSB7CiAgICAgICAgT2JqZWN0LmFzc2lnbihpdGVtLCByZXN1bHQuZGF0YXNbMF0pOwogICAgICB9CgogICAgICBjb25zb2xlLmxvZyhpdGVtKTsKICAgIH0KICAgIC8qKg0KICAgICAqIOWFrOWFseWPguaVsOWkhOeQhg0KICAgICAqDQogICAgICogQHBhcmFtIHsqfSBhcmcNCiAgICAgKiBAcmV0dXJucw0KICAgICAqIEBtZW1iZXJvZiBBcHBDb2x1bW5MaW5rDQogICAgICovCgogIH0sIHsKICAgIGtleTogImhhbmRsZVB1YmxpY1BhcmFtcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaGFuZGxlUHVibGljUGFyYW1zKGFyZykgewogICAgICBpZiAoIXRoaXMuZGF0YSkgewogICAgICAgIHRoaXMuJE5vdGljZS5lcnJvcih7CiAgICAgICAgICB0aXRsZTogdGhpcy4kdCgnY29tcG9uZW50cy5hcHBDb2x1bW5MaW5rLmVycm9yJyksCiAgICAgICAgICBkZXNjOiB0aGlzLiR0KCdjb21wb25lbnRzLmFwcENvbHVtbkxpbmsucm93RGF0YUV4Y2VwdGlvbicpCiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9IC8vIOWQiOW5tuihqOWNleWPguaVsAoKCiAgICAgIGFyZy5wYXJhbSA9IHRoaXMudmlld3BhcmFtcyA/IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy52aWV3cGFyYW1zKSkgOiB7fTsKICAgICAgYXJnLmNvbnRleHQgPSB0aGlzLmNvbnRleHQgPyBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuY29udGV4dCkpIDoge307CiAgICAgIHJldHVybiB0cnVlOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEFwcENvbHVtbkxpbms7Cn0oVnVlKTsKCnRzbGliXzEuX19kZWNvcmF0ZShbUHJvcCgpXSwgQXBwQ29sdW1uTGluay5wcm90b3R5cGUsICJkYXRhIiwgdm9pZCAwKTsKCnRzbGliXzEuX19kZWNvcmF0ZShbUHJvcCgpXSwgQXBwQ29sdW1uTGluay5wcm90b3R5cGUsICJsaW5rdmlldyIsIHZvaWQgMCk7Cgp0c2xpYl8xLl9fZGVjb3JhdGUoW1Byb3AoKV0sIEFwcENvbHVtbkxpbmsucHJvdG90eXBlLCAidmFsdWVpdGVtIiwgdm9pZCAwKTsKCnRzbGliXzEuX19kZWNvcmF0ZShbUHJvcCh7CiAgImRlZmF1bHQiOiB7fQp9KV0sIEFwcENvbHVtbkxpbmsucHJvdG90eXBlLCAiY29udGV4dCIsIHZvaWQgMCk7Cgp0c2xpYl8xLl9fZGVjb3JhdGUoW1Byb3AoewogICJkZWZhdWx0Ijoge30KfSldLCBBcHBDb2x1bW5MaW5rLnByb3RvdHlwZSwgInZpZXdwYXJhbXMiLCB2b2lkIDApOwoKdHNsaWJfMS5fX2RlY29yYXRlKFtQcm9wKCldLCBBcHBDb2x1bW5MaW5rLnByb3RvdHlwZSwgImRlS2V5RmllbGQiLCB2b2lkIDApOwoKQXBwQ29sdW1uTGluayA9IHRzbGliXzEuX19kZWNvcmF0ZShbQ29tcG9uZW50KHt9KV0sIEFwcENvbHVtbkxpbmspOwpleHBvcnQgZGVmYXVsdCBBcHBDb2x1bW5MaW5rOw=="},null]}